<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TRR.O2I.BusinessLogic.Core</name>
    </assembly>
    <members>
        <member name="T:TRR.O2I.BusinessLogic.Core.IWorkflowProcessingReporter">
            <summary>
            
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.IWorkflowProcessingReporter.Report(TRR.O2I.Common.Core.UIStatusMessage)">
            <summary>
            Reports the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.IWorkflowProcessingReporter.Warning(System.Int32,System.String,System.Object[])">
            <summary>
            Reports warning.
            </summary>
            <param name="localizationID">The localization ID.</param>
            <param name="message">The message.</param>
            <param name="messageParameters">The message parameters.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.IWorkflowProcessingReporter.Error(System.Int32,System.String,System.Object[])">
            <summary>
            Reports Error.
            </summary>
            <param name="localizationID">The localization ID.</param>
            <param name="message">The message.</param>
            <param name="messageParameters">The message parameters.</param>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.LogFactory">
            <summary>
            Creates log
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.LogFactory.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.BusinessLogic.Core.LogFactory"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.LogFactory.GetLogger">
            <summary>
            Gets the logger.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase">
            <summary>
            Settings from database
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase.GetDbVersion">
            <summary>
            Gets the db version.
            </summary>
            <value>The db version.</value>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase.GetDebugLevel">
            <summary>
            Gets the debug level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase.GetInvoiceExpirationPeriod">
            <summary>
            Gets the debug level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase.GetAbilityToAssignTRIP1">
            <summary>
            Gets the ability to assign TRI p1.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase.GetLogActivities">
            <summary>
            Gets the log activities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase.SetDebugLevel(TRR.O2I.Common.Core.Logging.LogLevel)">
            <summary>
            Sets the debug level.
            </summary>
            <param name="level">The level.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.SettingsFromDatabase.SetLogActivities(System.Boolean)">
            <summary>
            Logs the activities.
            </summary>
            <param name="log">if set to <c>true</c> [log].</param>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter">
            <summary>
            Represents processing result helper.
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter.Report(TRR.O2I.Common.Core.UIStatusMessage)">
            <summary>
            Reports about operation result.
            </summary>
            <param name="message">Report message.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter.Warning(System.Int32,System.String,System.Object[])">
            <summary>
            Reports warning.
            </summary>
            <param name="localizationID">The localization ID.</param>
            <param name="message">The message.</param>
            <param name="messageParameters">The message parameters.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter.Result(System.Int32,System.String,System.Object[])">
            <summary>
            Reports result.
            </summary>
            <param name="localizationID">The localization ID.</param>
            <param name="message">The message.</param>
            <param name="messageParameters">The message parameters.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter.Error(System.Int32,System.String,System.Object[])">
            <summary>
            Reports Error.
            </summary>
            <param name="localizationID">The localization ID.</param>
            <param name="message">The message.</param>
            <param name="messageParameters">The message parameters.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter.Error(System.String)">
            <summary>
            Reports a not localized error message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter.Warning(System.String)">
            <summary>
            Reports a not localized warning message.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter.Result(System.String)">
            <summary>
            Reports result.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.WorkflowProcessingReporter.IsMessageSet">
            <summary>
            IsMessageSet.
            </summary>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.Workflow.IUrlFactory">
            <summary>
            Typical Actions factory
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.IUrlFactory.GetCurrentPageReturnUrl">
            <summary>
            Gets the return URL.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.Workflow.ITRIPManager">
            <summary>
            TRIP Manager base interface
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.ITRIPManager.LoadTRIP(System.String)">
            <summary>
            Loads trip on per buyer basis.
            </summary>
            <param name="tripName">Trip name.</param>
            <returns>Loaded trip if any defined.</returns>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.Workflow.TRIPConfigurationBase">
            <summary>
            Contains base TRIP business logic. All the particular TRIP configuration objects should inherit it.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.TRIPConfigurationBase.#ctor(System.String)">
            <summary>
            Initializes TRIP instance.
            </summary>
            <param name="tripName">Default TRIP name.</param>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.TRIPConfigurationBase.tripName">
            <summary>
            Stores current TRIP Name.
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.TRIPConfigurationBase.documentsTasks">
            <summary>
            string Array of Hashtables whith TRIP tasks names.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.TRIPConfigurationBase.GetDocumentTasks(TRR.O2I.Common.Core.DocumentType)">
            <summary>
            Retrieves tasks processors list for target document type.
            </summary>
            <param name="docType">Target document type.</param>
            <returns>Tasks processors list (assembly and class name).</returns>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.TRIPConfigurationBase.Name">
            <summary>
            Gets TRIP Name.
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.TRIPConfigurationBase.PoOrCoElapsedTimePeriod">
            <summary>
            Gets elapse timeout for pending PO and CO notification.
            </summary>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.Workflow.TRIPManager">
            <summary>
            Represents <c>TRIPs</c> management facilities.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.TRIPManager.#ctor(TRR.O2I.Common.Core.Logging.ITRLog)">
            <summary>
            Initializes the class instance.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.TRIPManager.GetInstance">
            <summary>
            Provides singleton instance access point.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.TRIPManager.LoadTRIP">
            <summary>
            Loads default trip configuration instance (T01 used as default).
            </summary>
            <returns>Instance, that implements <see cref="T:TRR.O2I.Common.Core.ITRIPConfiguration"/>.</returns>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.TRIPManager.LoadTRIPInternal(System.String)">
            <summary>
            Loads trip configuration instance, based on TRIP name.
            </summary>
            <param name="TRName">Unique TRIP name.</param>
            <returns>Instance, that implements <see cref="T:TRR.O2I.Common.Core.ITRIPConfiguration"/>, for current TRIP name.</returns>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.TRIPManager.LoadTRIP(System.String)">
            <summary>
            Loads trip on per buyer basis.
            </summary>
            <param name="tripName">Buyer id.</param>
            <returns>Loaded trip if any defined.</returns>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.Workflow.TripName">
            <summary>
            Available TRIPS.
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.TripName.T01">
            <summary>
            Default TRIP.
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.TripName.T02">
            <summary>
            TRIP 2
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.TripName.T18">
            <summary>
            eInvoicing.
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.TripName.T22">
            <summary>
            Console eIR
            </summary>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.Workflow.UIAction">
            <summary>
            Represents UI action, provides means for transformation/ionvocation
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.CausesValidationParamName">
            <summary>
            
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.ShowProgressBarParamName">
            <summary>
            
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.WaitUntilPageIsFullyLoadedParamName">
            
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.IsAsyncParamName">
            
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.PanelsToUpdateParamName">
            
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.OnLoadScriptParamName">
            
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.DisablePageAfterClickParamName">
            
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.DefaultValidationGroup">
            <summary>Default validation group.</summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for new UIAction object.
            </summary>
            <param name="workflowID">Workflow identificator.</param>
            <param name="contextID">Context identificator.</param>
            <param name="actionID">Action identificator.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.GetTargetCountry">
            <summary>
            Gets the target country.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.GetActionUrl(TRR.O2I.Common.Core.IUIAction)">
            <summary>
            Builds target URL for new GET request.
            </summary>
            <param name="action">Action which is to be serialized into the URL</param>
            <returns>URL corresponding to an action in form of string</returns>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.GetActionUrl(TRR.O2I.Common.Core.IUIAction,System.String)">
            <summary>
            Builds target URL for new GET request.
            </summary>
            <param name="action">An action to be executed.</param>
            <param name="targetPage">Target page url.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.GetParamString(TRR.O2I.Common.Core.IUIAction)">
            <summary>
            Builds param string for specified action.
            </summary>
            <param name="action">Action to build param string for.</param>
            <returns>Built param string.</returns>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.Clone">
            <summary>
            Creates an intelligent shallow copy of the current instance.
            </summary>
            <remarks>
            Action parameters collection is being deep-copied, but it's items are shallow-copied indeed.
            This should however focus all the O2I needs.
            </remarks>
            <returns>Deep copied UIAction instance.</returns>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.AutoSaveResultCanonicalName">
            <summary>
            Use this public constant to acces AutoSave execution result.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.GetCurrentPageReturnUrl">
            <summary>
            Gets the return action.
            </summary>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.RawActionParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.WorkflowID">
            <summary>
            Gets ID of workflow for action processing
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.ContextID">
            <summary>
            Gets ID of context for action processing
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.ActionID">
            <summary>
            Gets ID of action 
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.AutoSave">
            <summary>
            Gets or Sets AutoSave flag 
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.CausesValidation">
            <summary>
            Gets/sets flag wheather this action should trigger validation.
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.ValidationGroup">
            <summary>
            Gets or sets Validation Group which is to be used during action execution validation process
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.ShowProgressBar">
            <summary>
            
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.WaitUntilPageIsFullyLoaded">
            <summary>
            Gets or sets a avalue indicating whether the page should be fully loaded befor the action execution.
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.IsAsync">
            <summary>
            Gets or sets a value indicating whether the action should be executed asynchronously.
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.PanelsToShowProgressBarOn">
            <summary>
            Gets or sets a coma-delimited list of update panels which are supposed to be updated after clicking on the control.
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.DisablePageAfterClick">
            <summary>
            Gets or sets a value indicating whether the page should be disabled after click.
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.ActionParams">
            <summary>
            Gets or Sets all action params (with Http request params).
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIAction.OnLoadScript">
            <summary>
            Gets or sets the script body which should be executed once page is fully loaded.
            </summary>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.Workflow.UIMuliDocAction">
            <summary>
            Represents UI action, provides means for transformation/ionvocation and transfer to multidoc parsing behaviour
            </summary>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.Workflow.UITransferAction">
            <summary>
            Represents UI action, provides means for transformation/ionvocation with transferring
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UITransferAction.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for UITransferAction
            </summary>
            <param name="workflowID">Workflow identificator.</param>
            <param name="contextID">Context identificator.</param>
            <param name="actionID">Action identificator.</param>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UIMuliDocAction.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for UIMuliDocAction
            </summary>
            <param name="workflowID">Workflow identificator.</param>
            <param name="contextID">Context identificator.</param>
            <param name="actionID">Action identificator.</param>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIMuliDocAction.multiParams">
            <summary>
            Primary key protected field name
            </summary>
        </member>
        <member name="F:TRR.O2I.BusinessLogic.Core.Workflow.UIMuliDocAction.isPageReadyToBind">
            <summary>
            Flag showing is Page ready to Databinding process
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIMuliDocAction.MultiParams">
            <summary>
            Array List of primary key values
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UIMuliDocAction.IsPageReadyToBind">
            <summary>
            Flag showing is Page ready to Databinding process
            </summary>
        </member>
        <member name="T:TRR.O2I.BusinessLogic.Core.Workflow.UITransferToAnotherPageAction">
            <summary>
            Represents UI action, provides means for transformation/ionvocation with transferring to another page.
            </summary>
        </member>
        <member name="M:TRR.O2I.BusinessLogic.Core.Workflow.UITransferToAnotherPageAction.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for UITransferToAnotherPageAction
            </summary>
            <param name="workflowID">Workflow identificator.</param>
            <param name="contextID">Context identificator.</param>
            <param name="actionID">Action identificator.</param>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UITransferToAnotherPageAction.OriginalAction">
            <summary>
            Original UIAction
            </summary>
        </member>
        <member name="P:TRR.O2I.BusinessLogic.Core.Workflow.UITransferToAnotherPageAction.Url">
            <summary>
             Gets or sets another page URL
            </summary>
        </member>
    </members>
</doc>
