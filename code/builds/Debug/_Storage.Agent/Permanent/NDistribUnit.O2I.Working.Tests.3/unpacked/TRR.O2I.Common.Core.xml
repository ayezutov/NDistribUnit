<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TRR.O2I.Common.Core</name>
    </assembly>
    <members>
        <member name="T:TRR.O2I.Common.Exceptions.AlertType">
            <summary>
            Alerts to be send.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.AlertType.XsdValidationFailed">
            <summary>
            XsdValidationFailed
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.AlertType.DuplicateGR">
            <summary>
            PoOrCoElapsedTimePeriod
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.AlertType.DuplicatePO">
            <summary>
            DuplicatePO
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.AlertType.CoWithoutPO">
            <summary>
            CoWithoutPO
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.AlertType.GRwithoutPO">
            <summary>
            GRwithoutPO
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.AlertType.DocumentSuccessfulCompletion">
            <summary>
            DocumentSuccessfulCompletion
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.AlertType.DuplicateRA">
            <summary>
            DuplicateRA
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.AlertType.INVRorESR">
            <summary>
            Invoice Response or Entry Sheet Response
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.BasketItemType">
            <summary>
            
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.BasketItemType.typeOrder">
            <summary>
            Purchase Order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.BasketItemType.typeGoodsReceipt">
            <summary>
            Goods Receipt
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.BasketItemType.typeOrderLine">
            <summary>
            Order Line
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.BusinessProcessType">
            <summary>
            Enumerates available business processes.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.BusinessProcessType.O2iProcess">
            <summary>
            O2I process.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.BusinessProcessType.OmtProcess">
            <summary>
            OMT process.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.BuyerCompanyType">
            <summary>
            Buyer Company type
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.BuyerCompanyType.NonSignature">
            <summary>
            General buyer company
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.BuyerCompanyType.Authentidate">
            <summary>
            Authentidate buyer company
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.BuyerCompanyType.TrustWeaver">
            <summary>
            TrustWeaver buyer company
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.BuyerCompanyType.Crossgate">
            <summary>
            Crossgate buyer company
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.CacheCategory">
            <summary>
            Defines the cache categories
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.CacheCategory.General">
            <summary>
            General category
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.CacheCategory.UserCredentials">
            <summary>
            User related category
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.CacheCategory.PurchaseOrder">
            <summary>
            Purchase order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.CacheCategory.EnumTables">
            <summary>
            Represents the enum tables category
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.CacheCategory.ShreddingMaps">
            <summary>
            Represents the category in which shredding definitions are put
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.CacheCategory.Entities">
            <summary>
            Represents the category for caching entities loaded from the db
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.CacheCategory.Workflows">
            <summary>
            Represents the category for caching workflows 
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.CacheCategory.QueryCache">
            <summary>
            Represents the category for caching queries
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.CacheCategory.Settings">
            <summary>
            Represetns the category for caching business settings
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.CachePolicy">
            <summary>
            Define policies for the cache item expiration
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.CachePolicy.#ctor(System.TimeSpan)">
            <summary>
            Minimal constructor, set the other properties to default values ...
            </summary>
            <param name="expirationInterval"></param>
        </member>
        <member name="M:TRR.O2I.Common.Core.CachePolicy.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.CachePolicy"/> class.
            </summary>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.CachePolicy.#ctor(System.TimeSpan,System.Web.Caching.CacheItemPriority,System.DateTime,System.Web.Caching.CacheDependency,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            Full constructor
            </summary>
            <param name="expirationInterval"></param>
            <param name="priority"></param>
            <param name="absoluteExpiration"></param>
            <param name="cacheDependencies"></param>
            <param name="removedCallback"></param>
        </member>
        <member name="P:TRR.O2I.Common.Core.CachePolicy.ExpirationInterval">
            <summary>
            Returns the Expiration interval in minutes for this policy
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.CachePolicy.Priority">
            <summary>
            Priority for the cache policy
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.CachePolicy.AbsoluteExpiration">
            <summary>
            Absolute expiration for the policy
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.CachePolicy.CacheDependencies">
            <summary>
            Dependecy objects 
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.CachePolicy.RemovedCallback">
            <summary>
            Removed callback method
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ApplicationCacheProvider">
            <summary>
            Default CacheProvider.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.IApplicationCacheProvider">
            <summary>
            Application Cache Provider base interface
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.IApplicationCacheProvider.Find(System.String)">
            <summary>
            Finds the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IApplicationCacheProvider.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.IApplicationCacheProvider.Add(TRR.O2I.Common.Core.CacheCategory,System.String,System.Object)">
            <summary>
            Adds the specified cache category.
            </summary>
            <param name="cacheCategory">The cache category.</param>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.IApplicationCacheProvider.Find(TRR.O2I.Common.Core.CacheCategory,System.String)">
            <summary>
            Finds the specified cache category.
            </summary>
            <param name="cacheCategory">The cache category.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IApplicationCacheProvider.Remove(TRR.O2I.Common.Core.CacheCategory,System.String)">
            <summary>
            Removes the specified cache category.
            </summary>
            <param name="cacheCategory">The cache category.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.IApplicationCacheProvider.Add(System.String,System.String,System.Object)">
            <summary>
            Adds the specified cache category.
            </summary>
            <param name="cacheCategory">The cache category.</param>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.IApplicationCacheProvider.Find(System.String,System.String)">
            <summary>
            Finds the specified cache category.
            </summary>
            <param name="cacheCategory">The cache category.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IApplicationCacheProvider.Remove(System.String,System.String)">
            <summary>
            Removes the specified cache category.
            </summary>
            <param name="cacheCategory">The cache category.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.IApplicationCacheProvider.GetOrLoad``1(TRR.O2I.Common.Core.CacheCategory,System.String,TRR.O2I.Common.Core.LoadItem{``0},System.Object)">
            <summary>
            Gets the or load.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="category">The category.</param>
            <param name="key">The key.</param>
            <param name="load">The load.</param>
            <param name="locker">The locker.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Cache.CustomAttributesCachingProxy">
            <summary>
            Contains functionality of getting custom attributes by reflection.
            Uses cache to gain performance.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Cache.CustomAttributesCachingProxy.GetCustomAttributes(System.Type,System.Type,System.Boolean)">
            <summary>
            Returns ciustom attributes for class. Uses cache to improve performance.
            </summary>
            <param name="classType">Class type.</param>
            <param name="attributeType">Type of the attributes to get.</param>
            <param name="inherit">Inheritance.</param>
            <returns>Array of custom attributes.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Cache.CustomAttributesCachingProxy.GetCustomAttributes(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            Gets custom attributes from property. Uses cache to improve perfomance.
            </summary>
            <param name="propertyInfo">Property info.</param>
            <param name="attributeType">Type of the attributes to get.</param>
            <param name="inherit">Inheritance.</param>
            <returns>Array of custom attributes.</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.ICachePolicyConfiguration">
            <summary>
             CachePolicyConfiguration base interface
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ICachePolicyConfiguration.GetPolicyByCategory(TRR.O2I.Common.Core.CacheCategory)">
            <summary>
            Gets the policy by category.
            </summary>
            <param name="cacheCategory">The cache category.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ICachePolicyConfiguration.GetPolicyByCategory(System.String)">
            <summary>
            Gets the policy by category.
            </summary>
            <param name="cacheCategory">The cache category.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.LoadItem`1">
            <summary>
            Load item delegate
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ISessionCacheProvider">
            <summary>
            SessionCacheProvder base interface
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ISessionCacheProvider.Add(System.String,System.Object)">
            <summary>
            Adds item with specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ISessionCacheProvider.Remove(System.String)">
            <summary>
            Removes item with specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ISessionCacheProvider.Find(System.String)">
            <summary>
            Finds item with specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ISessionCacheProvider.Add(TRR.O2I.Common.Core.CacheCategory,System.String,System.Object)">
            <summary>
            Adds the specified category.
            </summary>
            <param name="category">The category.</param>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ISessionCacheProvider.Remove(TRR.O2I.Common.Core.CacheCategory,System.String)">
            <summary>
            Removes the specified category.
            </summary>
            <param name="category">The category.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ISessionCacheProvider.Find(TRR.O2I.Common.Core.CacheCategory,System.String)">
            <summary>
            Finds the specified category.
            </summary>
            <param name="category">The category.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextInformation">
            <summary>
            Provides context information
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.IContextInformation">
            <summary>
            
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IContextInformation.UserId">
            <summary>
            Gets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IContextInformation.SupplierId">
            <summary>
            Gets the supplier id.
            </summary>
            <value>The supplier id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IContextInformation.UserName">
            <summary>
            Gets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IContextInformation.AccountCodes">
            <summary>
            Gets the account codes.
            </summary>
            <value>The account codes.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextInformation.UserId">
            <summary>
            Gets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextInformation.SupplierId">
            <summary>
            Gets the supplier id.
            </summary>
            <value>The supplier id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextInformation.UserName">
            <summary>
            Gets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextInformation.AccountCodes">
            <summary>
            Gets the account codes.
            </summary>
            <value>The account codes.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextServiceFactory">
            <summary>
            Factory facility capable of constructing particular ContextService instances.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceFactory.GetInstance">
            <summary>
            Gets the ContextService instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextServiceProviderFactory">
            <summary>
            Factory facility capable of constructing particular ContextService instances.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceProviderFactory.GetInstance">
            <summary>
            Gets the Context Service instance.
            </summary>
            <returns>ContextServiceProvider instance.</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.ControlsHelper">
            <summary>
            Helper to work with controls
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.IControlsHelper">
            <summary>
            Base interface for ControlsHelper
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.IControlsHelper.FindControl(System.Web.UI.Control,System.String)">
            <summary>
            Finds the control.
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="controlId">The control id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.GetBaseImagePath(System.String)">
            <summary>
            Gets the path, whre O2I images are stored
            </summary>
            <param name="applicationPath">The path to application</param>
            <returns>Path, whre O2I images are stored</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.FindControl(System.Web.UI.Control,System.String)">
            <summary>
            Reccursively searchs control in the tree, starting 
            at pointed parent control.
            </summary>
            <param name="parentControl">Starting control.</param>
            <param name="controlId">Control ID look for.</param>
            <returns>finded control or null.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.DisableControl(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Disables target control.
            </summary>
            <param name="parentControl">Parent control to start search.</param>
            <param name="controlId">Control Identificator.</param>
            <param name="toolTip">Additional ToolTip string.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.FindControlByIdAndType(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Gets control by its id.
            </summary>
            <param name="view">Control, in witch collection search should be performed.</param>
            <param name="controlId">Service control ID.</param>
            <param name="requiredControlTypeName">Control type.</param>
            <returns>Searched control.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.AppendAttribute(System.Web.UI.AttributeCollection,System.String,System.String)">
            <summary>
            Appends the attribute.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.FindControlInChildrenById(System.Web.UI.Control,System.String)">
            <summary>
            Performs Control search in children controls by id.
            </summary>
            <param name="container"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.FindControlInParentsById(System.Web.UI.Control,System.String)">
            <summary>
            Performs Control search in parent controls by Id
            </summary>
            <param name="startingControl"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.GetRegisteredItems``1(System.String,System.Web.UI.Page)">
            <summary>
             Gets items registered in Page.Items under a key specified.
            </summary>
            <param name="key">The key.</param>
            <param name="page">The Page.</param>
            <typeparam name="T">Item type.</typeparam>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.GetControlsByTypeInChildren``1(System.Web.UI.Control)">
            <summary>
            Gets a list of controls ClientIDs nested within parent control.
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ControlsHelper.MakeControlFakedDisabled(System.Web.UI.WebControls.WebControl)">
            <summary>
            Makes control faked disabled leaving it actually enabled.
            </summary>
            <param name="ctrl"></param>
        </member>
        <member name="P:TRR.O2I.Common.Core.ControlsHelper.DefaultImageBasePath">
            <summary>
             Provides default ImageBasePath in case it's absent in config.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ControlsHelper.ImageBasePath">
            <summary>
             Provides ImageBasePath
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.DocumentTypeUI">
            <summary>
             Represent an enumeration for DocumentTypes supported on UI
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentTypeUI.PO">
            <summary>
            Puchase Order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentTypeUI.CO">
            <summary>
            Change Order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentTypeUI.ASN">
            <summary>
            Advanced Shipment Notice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentTypeUI.GR">
            <summary>
            Goods Receipt
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentTypeUI.ES">
            <summary>
            Entry Sheet
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentTypeUI.INV">
            <summary>
            Invoice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentTypeUI.CA">
            <summary>
            Credit Advice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentTypeUI.RA">
            <summary>
            Remittance Advice
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.DraftObjectIdProvider">
            <summary>
            Draft object Id provider.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.DraftObjectIdProvider.GetNext``1">
            <summary>
            Gets the next id for object of specified type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DraftObjectIdProvider.Clear">
            <summary>
            Clears this instance (drop all counters).
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ExcelOperations.Configuration.ColumnMapping">
            <summary>
            Class to store a information about mappigs between excel column name 
            and field of object where information will be stored
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ExcelOperations.Configuration.ColumnMapping.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.ExcelOperations.Configuration.ColumnMapping.Property">
            <summary>
            Gets or sets the property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings">
            <summary>
            Class to store excel file parsing settings
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings.LoadFromXml(System.String)">
            <summary>
            Loads from XML.
            </summary>
            <param name="xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings.IMEX">
            <summary>
            Gets or sets a value whether IMEX set to '1'
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings.ColumnMappings">
            <summary>
            Gets the column mappings.
            </summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings.MaxRowsToRead">
            <summary>
            Gets or sets the max rows to read.
            </summary>
            <value>The max rows to read.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings.SheetName">
            <summary>
            Gets or sets the name of the sheet.
            </summary>
            <value>The name of the sheet.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings.HasHeader">
            <summary>
            Gets or sets a value indicating whether this instance has header.
            </summary>
            <value>
            	<c>true</c> if this instance has header; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings.HeaderSize">
            <summary>
            Gets or sets HeaderSize
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
            <value>The encoding.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.ExcelOperations.ExcelFileOperatorBase">
            <summary>
            Excel File Operator
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.ExcelOperations.ExcelFileOperatorBase.Settings">
            <summary>
            Excel Parser Settings
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.ExcelOperations.ExcelFileOperatorBase.FileType">
            <summary>
            Excel File Type
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelOperations.ExcelFileOperatorBase.#ctor(TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings,HW.Excel.Importing.ExcelFileType)">
            <summary>
            Public constructor
            </summary>
            <param name="settings"></param>
            <param name="fileType"></param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelOperations.ExcelFileOperatorBase.CreateContext">
            <summary>
            Creates context
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelOperations.ExcelFileOperatorBase.ExecuteWithExceptionsCatching(System.Func{System.Object})">
            <summary>
            Executes function with exceptions catching.
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.ExcelOperations.ExcelFileUpdater">
            <summary>
            ExcelFileUpdater
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelOperations.ExcelFileUpdater.#ctor(TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings,HW.Excel.Importing.ExcelFileType)">
            <summary>
            Public constructor
            </summary>
            <param name="settings"></param>
            <param name="fileType"></param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelOperations.ExcelFileUpdater.InsertEntities``1(System.Collections.Generic.IEnumerable{``0},HW.Excel.Importing.StreamToTempFilePersister)">
            <summary>
            Updates excel file with entities.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <param name="filePersister"></param>
        </member>
        <member name="T:TRR.O2I.Common.Core.ExcelParsing.Exceptions.ExcelParserFileFormatException">
            <summary>
            Occurs when a file format is incorrect (e.g. file version is too old)
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelParsing.Exceptions.ExcelParserFileFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.ExcelParsing.Exceptions.ExcelParserFileFormatException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.ExcelParsing.Exceptions.ExcelParserFileStructureException">
            <summary>
            Occurs when a file stucture don't match to settings in config file
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelParsing.Exceptions.ExcelParserFileStructureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.ExcelParsing.Exceptions.ExcelParserFileStructureException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.ExcelOperations.Contexts.IContext">
            <summary>
            Context
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelOperations.Contexts.IContext.Load(System.String,TRR.O2I.Common.Core.ExcelOperations.Configuration.ExcelParserSettings)">
            <summary>
            Loads context
            </summary>
            <param name="path">File path.</param>
            <param name="settings">Excel parser settings.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelOperations.Contexts.IContext.GetConnectionString">
            <summary>
            Gets connection string
            </summary>
            <returns>Conntection string.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ExcelOperations.Contexts.IContext.GetTableName">
            <summary>
            Gets the name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Exceptions.DocumentInfoInjector">
            <summary>
            Allow to inject/extract DocumentInfo to/from exception/exception stack
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Exceptions.DocumentInfoInjector.Inject(TRR.O2I.Common.Core.Logging.DocumentInfo,System.Exception)">
            <summary>
            Injects the specified document info.
            </summary>
            <param name="documentInfo">The document info.</param>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Exceptions.DocumentInfoInjector.Extract(System.Exception)">
            <summary>
            Extracts the document info from specified exception.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Exceptions.IExceptionInvestigator">
            <summary>
            Finds the data in the exception.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Exceptions.IExceptionInvestigator.FindRecursive``1(System.Exception)">
            <summary>
            Finds exception with specified type in exception stack.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Exceptions.IExceptionInvestigator.GetDocumentInfo(System.Exception)">
            <summary>
            Gets the document info.
            </summary>
            <param name="exception">The exception info.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.IIntegrationServiceConfiguration">
            <summary>
            Configuration for integration service.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IIntegrationServiceConfiguration.ActivationInterval">
            <summary>
            Gets the activation interval.
            </summary>
            <value>The activation interval.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IIntegrationServiceConfiguration.HeartBeatInterval">
            <summary>
            Gets the heart beat interval.
            </summary>
            <value>The heart beat interval.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.ResourceLocalizatorBaseFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.IResourceLocalizatorFactory">
            <summary>
            Denotes ResourceLocalizator instances factory
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.IResourceLocalizatorFactory.LookupLocalizatorInstance(TRR.O2I.Common.Core.Localization.ILocalizatonResourceDescriptor)">
            <summary>
            Gets concrete resource localizator instance from pull given its key.
            </summary>
            <param name="key">Instance of ILocalizatonResourceDescriptor</param>
            <returns>Concrete resource localizator instance or null if there is no match.</returns>
        </member>
        <member name="F:TRR.O2I.Common.Core.Localization.ResourceLocalizatorBaseFactory.locHandlers">
            <summary>
            Holds collection of localization handlers.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.ResourceLocalizatorBaseFactory.LookupLocalizatorInstance(TRR.O2I.Common.Core.Localization.ILocalizatonResourceDescriptor)">
            <summary>
            Gets concrete resource localizator instance from pull given its key.
            </summary>
            <param name="key">Key to perform lookup against.</param>
            <returns>Concrete resource localizator instance or null if there is no match.</returns>
        </member>
        <member name="T:WebPartControlResourceLocalizatorFactory">
            <summary> </summary>
        </member>
        <member name="M:WebPartControlResourceLocalizatorFactory.#ctor">
            <summary>
            Initializes class instance.
            </summary>
        </member>
        <member name="P:WebPartControlResourceLocalizatorFactory.Instance">
            <summary>
            Provides singleton instance access point.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.LoggableDocumentType">
            <summary>
            
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeOrder">
            <summary>
            Purchase Order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeChangeOrder">
            <summary>
            Change Order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeOrderResponse">
            <summary>
            Order Response
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeASN">
            <summary>
            Advance Shipment Notice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeInvoice">
            <summary>
            Invoice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeGoodsReceipt">
            <summary>
            Goods Receipt
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeChangeOrderResponse">
            <summary>
            Change Order Response
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeCreditAdvice">
            <summary>
            Credit Advice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeInvoiceResponse">
            <summary>
            Invoice Response.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeRemittanceAdvice">
            <summary>
            Remittance Advice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LoggableDocumentType.typeServiceEntrySheet">
            <summary>
            Service Entry Sheet
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.ProcessDocumentException">
            <summary>
            Exception to throw when operation with document is failed.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ProcessDocumentException.#ctor(TRR.O2I.Common.Core.Logging.DocumentInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.ProcessDocumentException"/> class.
            </summary>
            <param name="documentInfo">The document info.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ProcessDocumentException.#ctor(TRR.O2I.Common.Core.Logging.DocumentInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.ProcessDocumentException"/> class.
            </summary>
            <param name="documentInfo">The document info.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.ProcessDocumentException.DocumentInfo">
            <summary>
            Gets the document info.
            </summary>
            <value>The document info.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.DataAccessExceptionLogEntry">
            <summary>
            Log presentation of data access exception
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ApplicationExceptionLogEntry">
            <summary>
            Log presentation of application exception
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry">
            <summary>
            Log presentation of exception
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry.#ctor(System.String,System.String,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="stackTrace">The stack trace.</param>
            <param name="source">The source.</param>
            <param name="exceptionType">The actual type of exception</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry.ExceptionType">
            <summary>
            The type of exception, which was thrown
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry.StackTrace">
            <summary>
            Gets the stack trace.
            </summary>
            <value>The stack trace.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry.Source">
            <summary>
            Gets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ApplicationExceptionLogEntry.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.Int32,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.ApplicationExceptionLogEntry"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="stackTrace">The stack trace.</param>
            <param name="details">The details.</param>
            <param name="source">The source.</param>
            <param name="tag">The tag.</param>
            <param name="exceptionId">The exception id.</param>
            <param name="exceptionType">The type of exception</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ApplicationExceptionLogEntry.Details">
            <summary>
            Gets the details.
            </summary>
            <value>The details.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ApplicationExceptionLogEntry.Tag">
            <summary>
            Gets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ApplicationExceptionLogEntry.ExceptionId">
            <summary>
            Gets the exception id.
            </summary>
            <value>The exception id.</value>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.DataAccessExceptionLogEntry.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.String,System.Guid,System.Int32,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.DataAccessExceptionLogEntry"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="stackTrace">The stack trace.</param>
            <param name="details">The details.</param>
            <param name="sqlCommandText">The SQL command text.</param>
            <param name="sqlParameters">The SQL parameters.</param>
            <param name="source">The source.</param>
            <param name="tag">The tag.</param>
            <param name="exceptionId">The exception id.</param>
            <param name="exceptionType">The type of exception</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.DataAccessExceptionLogEntry.SqlCommandText">
            <summary>
            Gets the SQL command text.
            </summary>
            <value>The SQL command text.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.DataAccessExceptionLogEntry.SqlParameters">
            <summary>
            Gets the SQL parameters.
            </summary>
            <value>The SQL parameters.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ExceptionHtmlRenderer">
            <summary>
            Renders exception to HTML.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.IExceptionRenderer">
            <summary>
            Renders exceptions.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.IExceptionRenderer.CreateExceptionMessage(System.Collections.Generic.IEnumerable{TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry},TRR.O2I.Common.Core.Logging.DocumentInfo,TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider)">
            <summary>
            Creates the exception message.
            </summary>
            <param name="logPresentations">The log presentations.</param>
            <param name="documentInfo">The document info.</param>
            <param name="provider">The provider.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ExceptionHtmlRenderer.#ctor(TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.ExceptionHtmlRenderer"/> class.
            </summary>
            <param name="facade">The facade.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ExceptionHtmlRenderer.CreateExceptionMessage(System.Collections.Generic.IEnumerable{TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry},TRR.O2I.Common.Core.Logging.DocumentInfo,TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider)">
            <summary>
            Creates the exception message.
            </summary>
            <param name="logPresentations">The log presentations.</param>
            <param name="documentInfo">The document info.</param>
            <param name="provider">The provider.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ExceptionHtmlRenderer.GetHtmlPresentation(System.Collections.Generic.IEnumerable{TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry})">
            <summary>
            Gets the presentation.
            </summary>
            <param name="logs">The logs.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ExceptionRendererFactory">
            <summary>
            Creates new instance of ExceptionHtmlRenderer.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ExceptionRendererFactory.CreateExceptionHtmlRenderer">
            <summary>
            Creates the exception HTML renderer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ExceptionTextRenderer">
            <summary>
             Renders exception to plain text.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ExceptionTextRenderer.CreateExceptionMessage(System.Collections.Generic.IEnumerable{TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry},TRR.O2I.Common.Core.Logging.DocumentInfo,TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider)">
            <summary>
            Creates the exception message.
            </summary>
            <param name="logPresentations">The log presentations.</param>
            <param name="documentInfo">The document info.</param>
            <param name="provider">The provider.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow">
            <summary>
            Log Entity Row
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow.LogLevelFK">
            <summary>
            Gets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow.UserName">
            <summary>
            Gets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow.Sender">
            <summary>
            Gets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow.Tag">
            <summary>
            Gets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow.ExceptionID">
            <summary>
            Gets the exception id.
            </summary>
            <value>The exception id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow.O2iDocumentId">
            <summary>
            Gets the o2i document id.
            </summary>
            <value>The o2i document id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow.DocId">
            <summary>
            Gets the doc id.
            </summary>
            <value>The doc id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogEntityRow.FullMessage">
            <summary>
            Gets the full message.
            </summary>
            <value>The full message.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.IMailSender">
            <summary>
            Sends e-mails.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.IMailSender.Send(System.String)">
            <summary>
            Sends the specified exception message.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogEntityRow">
            <summary>
            Log Entity Row
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.#ctor(System.String,System.Int32,System.String,System.String,System.Guid,System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.LogEntityRow"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="level">The level.</param>
            <param name="userName">Name of the user.</param>
            <param name="sender">The sender.</param>
            <param name="tag">The tag.</param>
            <param name="exceptionID">The exception id.</param>
            <param name="o2iDocumentId">The o2i document id.</param>
            <param name="docId">The doc id.</param>
            <param name="fullMessage">The full message.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.LogLevelFK">
            <summary>
            Gets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.UserName">
            <summary>
            Gets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.Sender">
            <summary>
            Gets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.Tag">
            <summary>
            Gets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.ExceptionID">
            <summary>
            Gets the exception id.
            </summary>
            <value>The exception id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.O2iDocumentId">
            <summary>
            Gets the o2i document id.
            </summary>
            <value>The o2i document id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.DocId">
            <summary>
            Gets the doc id.
            </summary>
            <value>The doc id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogEntityRow.FullMessage">
            <summary>
            Gets the full message.
            </summary>
            <value>The full message.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogGateway">
            <summary>
            Simple gateway to store activity log.
            <remarks>
            This gateway is used to store activity log without using DataAccessService to enable logging errors occured in DataAccessService.
            </remarks>
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ILogGateway">
            <summary>
            Log gateway
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ILogGateway.InsertActivity(TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo)">
            <summary>
            Inserts the specified log info.
            </summary>
            <param name="logInfo">The log info.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ILogGateway.Insert(TRR.O2I.Common.Core.Logging.Support.LogEntityRow)">
            <summary>
            Inserts the specified message.
            </summary>
            <param name="logEntityRow">The log entity row.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogGateway.InsertActivity(TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo)">
            <summary>
            Inserts the specified log info.
            </summary>
            <param name="logInfo">The log info.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogGateway.Insert(TRR.O2I.Common.Core.Logging.Support.LogEntityRow)">
            <summary>
            Inserts the specified message.
            </summary>
            <param name="logEntityRow"></param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.EmailToSupportFilter">
            <summary>
            Filters messages that should be sent to support.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.EmailToSupportFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>
            Filters the specified logging event.
            </summary>
            <param name="loggingEvent">The logging event.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.EmailToSupportLogInfo">
            <summary>
            Log info for sending to support.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.IEmailToSupportLogInfo">
            <summary>
            Log info for sending to support.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IEmailToSupportLogInfo.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.EmailToSupportLogInfo.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.EmailToSupportLogInfo"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.EmailToSupportLogInfo.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.EmailToSupportWriter">
            <summary>
            Write email in log when database unavailable.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.EmailToSupportWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.EmailToSupportWriter"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.EmailToSupportWriter.#ctor(TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.EmailToSupportWriter"/> class.
            </summary>
            <param name="facade">The facade.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.EmailToSupportWriter.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>
            Sends the events.           
            </summary>
            <param name="events">The events that need to be send.</param>
            <remarks>
            <para>
            The subclass must override this method to process the buffered events.         
            </para>
            </remarks>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.FileFilter">
            <summary>
            A filter for type of event that should be logged in file.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.FileFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>
            Decides the specified logging event.
            </summary>
            <param name="loggingEvent">The logging event.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.FileWriter">
            <summary>
            Writes log info in file.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.FileWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.FileWriter"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.FileWriter.#ctor(TRR.O2I.Common.Core.IO2iConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.FileWriter"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.FileWriter.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>
            Sends the buffer.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.LogConfiguration">
            <summary>
            Log configuration.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogConfiguration.ForceConfiguration(TRR.O2I.Common.Core.Logging.LogLevel)">
            <summary>
            Configures logging facilities given XML string content.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogConfiguration.GetXmlFromConfig(TRR.O2I.Common.Core.Logging.LogLevel)">
            <summary>
            Gets current logging XML configuration from DB.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.AlertLogInfo">
            <summary>
            Alert log info.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.IAlertLogInfo">
            <summary>
            Interface for alert log info.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IAlertLogInfo.DocumentInfo">
            <summary>
            Gets the document info.
            </summary>
            <value>The document info.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IAlertLogInfo.Details">
            <summary>
            Gets the details.
            </summary>
            <value>The details.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IAlertLogInfo.AlertType">
            <summary>
            Gets the type of the alert.
            </summary>
            <value>The type of the alert.</value>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.AlertLogInfo.#ctor(TRR.O2I.Common.Exceptions.AlertType,System.String,TRR.O2I.Common.Core.Logging.DocumentInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.AlertLogInfo"/> class.
            </summary>
            <param name="documentInfo">The document info.</param>
            <param name="details">The details.</param>
            <param name="alertType">Type of the alert.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.AlertLogInfo.DocumentInfo">
            <summary>
            Gets the document info.
            </summary>
            <value>The document info.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.AlertLogInfo.Details">
            <summary>
            Gets the details.
            </summary>
            <value>The details.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.AlertLogInfo.AlertType">
            <summary>
            Gets the type of the alert.
            </summary>
            <value>The type of the alert.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.AlertsFilter">
            <summary>
            This class is a filter for type of event that should be logged
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.AlertsFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>
            Tests if the <see cref="T:log4net.Core.Level"/> of the logging event matches that of the filter
            </summary>
            <remarks>
            If the <see cref="T:log4net.Core.Level"/> of the event matches the level of the
            filter then the result of the function depends on the
            value of <c>AcceptOnMatch"</c>. If it is true then
            the function will return <see cref="F:log4net.Filter.FilterDecision.Accept"/>, it it is false then it
            will return <see cref="F:log4net.Filter.FilterDecision.Deny"/>. If the <see cref="T:log4net.Core.Level"/> does not match then
            the result will be the opposite of when it does match.
            </remarks>
            <param name="loggingEvent">the event to filter</param>
            <returns>see remarks</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntryAssembler">
            <summary>
            Converts exception with inner exceptions in log entries.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.IExceptionLogEntryAssembler">
            <summary>
            Converts exception with inner exceptions in log entries.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.IExceptionLogEntryAssembler.GetExceptionLogEntries(System.Exception)">
            <summary>
            Gets the logs.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntryAssembler.GetExceptionLogEntries(System.Exception)">
            <summary>
            Gets the logs.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntryAssembler.GetSqlParameters(System.Data.IDbCommand)">
            <summary>
            Gets the SQL parameters.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.FileTargetLogInfo">
            <summary>
            Log info to write in file.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.IFileTargetLogInfo">
            <summary>
            Log info to write in file.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IFileTargetLogInfo.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.FileTargetLogInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.FileTargetLogInfo"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.FileTargetLogInfo.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.MailSender">
            <summary>
            Sends mail messages.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.MailSender.Send(System.String)">
            <summary>
            Sends the specified exception message.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.SqlErrorLog">
            <summary>
            Sql error log entry 
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.SqlErrorLog.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.SqlErrorLog"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="lineNumber">The line number.</param>
            <param name="source">The source.</param>
            <param name="procedure">The procedure.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.SqlErrorLog.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.SqlErrorLog.LineNumber">
            <summary>
            Gets the line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.SqlErrorLog.Source">
            <summary>
            Gets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.SqlErrorLog.Procedure">
            <summary>
            Gets the procedure.
            </summary>
            <value>The procedure.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.SqlExceptionLogEntry">
            <summary>
            Log entry for SqlExceptions
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.SqlExceptionLogEntry.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{TRR.O2I.Common.Core.Logging.Support.SqlErrorLog},System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.SqlExceptionLogEntry"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="stackTrace">The stack trace.</param>
            <param name="source">The source.</param>
            <param name="sqlErrors">The SQL errors.</param>
            <param name="exceptionType">The type of exception</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.SqlExceptionLogEntry.SqlErrors">
            <summary>
            Gets the SQL errors.
            </summary>
            <value>The SQL errors.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.XsdValidationExceptionLogEntry">
            <summary>
            Log presentation of xsd validation exception.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.XsdValidationExceptionLogEntry.#ctor(System.String,System.String,System.String,System.String,System.Guid,System.Int32,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.XsdValidationExceptionLogEntry"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="stackTrace">The stack trace.</param>
            <param name="details">The details.</param>
            <param name="source">The source.</param>
            <param name="tag">The tag.</param>
            <param name="exceptionId">The exception id.</param>
            <param name="exceptionType">The type of exception</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Resources.LogSettings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Resources.LogSettings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Resources.LogSettings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Resources.LogSettings.TRRO2ILog_error">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;log4net debug=&quot;false&quot;&gt;
              &lt;!-- Writer for logging messages,exceptions --&gt;
              &lt;appender name=&quot;LogDatabaseWriter&quot; type=&quot;TRR.O2I.Common.Core.Logging.Support.LogDatabaseWriter, TRR.O2I.Common.Core&quot;&gt;
                &lt;param name=&quot;BufferSize&quot; value=&quot;1&quot; /&gt;
                &lt;filter type=&quot;TRR.O2I.Common.Core.Logging.Support.LogErrorFilter, TRR.O2I.Common.Core&quot;&gt;
                &lt;/filter&gt;
              &lt;/appender&gt;
              &lt;!-- Writer for logging activity --&gt;
              &lt;appender name=&quot;ActivityLogDatabaseWriter&quot; type=&quot;TRR.O2I.Common.Co [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Resources.LogSettings.TRRO2ILog_info">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;log4net debug=&quot;false&quot;&gt;
              &lt;!-- Writer for logging messages,exceptions --&gt;
              &lt;appender name=&quot;LogDatabaseWriter&quot; type=&quot;TRR.O2I.Common.Core.Logging.Support.LogDatabaseWriter, TRR.O2I.Common.Core&quot;&gt;
                &lt;param name=&quot;BufferSize&quot; value=&quot;1&quot; /&gt;
                &lt;filter type=&quot;TRR.O2I.Common.Core.Logging.Support.LogInfoFilter, TRR.O2I.Common.Core&quot;&gt;
                &lt;/filter&gt;
              &lt;/appender&gt;
              &lt;!-- Writer for logging activity --&gt;
              &lt;appender name=&quot;ActivityLogDatabaseWriter&quot; type=&quot;TRR.O2I.Common.Cor [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Resources.LogSettings.TRRO2ILog_warning">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;log4net debug=&quot;false&quot;&gt;
              &lt;!-- Writer for logging messages,exceptions --&gt;
              &lt;appender name=&quot;LogDatabaseWriter&quot; type=&quot;TRR.O2I.Common.Core.Logging.Support.LogDatabaseWriter, TRR.O2I.Common.Core&quot;&gt;
                &lt;param name=&quot;BufferSize&quot; value=&quot;1&quot; /&gt;
                &lt;filter type=&quot;TRR.O2I.Common.Core.Logging.Support.LogWarningFilter, TRR.O2I.Common.Core&quot;&gt;
                &lt;/filter&gt;
              &lt;/appender&gt;
              &lt;!-- Writer for logging activity --&gt;
              &lt;appender name=&quot;ActivityLogDatabaseWriter&quot; type=&quot;TRR.O2I.Common. [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.RoleDescription">
            <summary>
            String role values
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.RoleDescription.O2I_Admin">
            <summary>
            O2I Admin.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.RoleDescription.O2I_User_INV">
            <summary>
            O2I INV User.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.RoleDescription.eInvoiceAdmin">
            <summary>
            eInvoice admin. Have the same permissions as O2I_Admin.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.RoleDescription.O2I_User">
            <summary>
            User PO/POR, CO/COR, ASN, GR, CA Privileges
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.RoleDescription.CM_Admin">
            <summary>
            Commerster Admin. Is allowed to see ErrorLog, ActivityLog, Admin Console.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.RoleDescription.CM_COMPANYADMIN">
            <summary>
            CM_COMPANYADMIN
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.RoleDescription.CM_USER">
            <summary>
            CM_USER
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.SupplierCountry">
            <summary>
            Customizations that avaiable for countries.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.USA">
            <summary>USA</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Spain">
            <summary>Spain</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.France">
            <summary>France</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Germany">
            <summary>Germany</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Console">
            <summary>Console</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Netherlands">
            <summary>Netherlands</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Norway">
            <summary>Norway</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.UnitedKingdom">
            <summary>UnitedKingdom</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Switzerland">
            <summary>Switzerland</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Belgium">
            <summary>Belgium</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Other">
            <summary>Other</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.xCBL3Generic">
            <summary>xCBL3.0 Generic</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Canada">
            <summary>Canada</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SupplierCountry.Italy">
            <summary>Italy</summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.DateTimeUtil.DateTimeFactory">
            <summary>
            Provides means to get the "now" date conforming to certain biz rules.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeFactory">
            <summary>
            Base interface for DateTimeFactory
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeFactory.UtcNow">
            <summary>
            Gets the utc now.
            </summary>
            <value>The utc now.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.DateTimeUtil.DateTimeFactory.UtcNowTrimmedBySec">
            <summary>
            Gets UtcNow date trimmed down to seconds.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.DateTimeUtil.DateTimeFactory.UtcNow">
            <summary>
            Gets UtcNow date as is (not trimmed).
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.DocumentType">
            <summary>
            Represents the document types used in O2I
            </summary>
            @TODO: check whether it is possible to syncronyze enum int values with PK in rod.DocumentType table.
            @TODO: right there is some inconsistency here (not all record in DB, not all member have same key in code and DB)
            @TODO: but in the same time there are direct casts from DocumentType to int in DB calls!
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeOrder">
            <summary>
            Purchase Order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeChangeOrder">
            <summary>
            Change Order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeOrderResponse">
            <summary>
            Order Response
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeASN">
            <summary>
            Advance Shipment Notice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoice">
            <summary>
            Invoice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeGoodsReceipt">
            <summary>
            Goods Receipt
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeASNLine">
            <summary>
            ASN Line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoiceLine">
            <summary>
            Invoice Line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeOrderResponseLine">
            <summary>
            Order Response Line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeChangeOrderResponse">
            <summary>
            Cange Order response
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeChangeOrderLine">
            <summary>
            Change Order Line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeOrderLine">
            <summary>
            Order Line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeGoodsReceiptToInvoice">
            <summary>
            Order Line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeOrderResponseLineShipmentDetail">
            <summary>
            Order Response Line ShipmentDetail
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeChangeOrderResponseLineShipmentDetail">
            <summary>
            Change Order Response Line ShipmentDetail
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4Trip18">
            <summary>
            Represents invoice compliant with xCBL 4.0 standard.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoiceLinexCBL4Trip18">
            <summary>
            Represents invoice compliant with xCBL 4.0 standard.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeChangeOrderLineReference">
            <summary>
            Change Order Response Line References.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4Trip20">
            <summary>
            Represents invoice compliant with xCBL 4.0 standard for TRIP 20.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoiceLinexCBL4Trip20">
            <summary>
            Represents invoice compliant with xCBL 4.0 standard for TRIP 20.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4Trip21">
            <summary>
            Represents invoice compliant with xCBL 4.0 standard for TRIP 21.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoiceLinexCBL4Trip21">
            <summary>
            Represents invoice compliant with xCBL 4.0 standard for TRIP 21.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeCreditAdvice">
            <summary>
            Credit Advice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeCreditAdviceLine">
            <summary>
            CreditAdvice Line type
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4">
            <summary>
            Represents invoice compliant with xCBL 4.0 standard for TRIP 22.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeOrderHistory">
            <summary>
            PO and POR history
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeChangeOrderHisory">
            <summary>
            CO and COR history
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4Trip23">
            <summary>
            Represents invoice compliant with xCBL 4.0 standard for TRIP 23.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoiceLinexCBL4Trip23">
            <summary>
            Represents invoice compliant with xCBL 4.0 standard for TRIP 23.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoiceResponse">
            <summary>
            Invoice Response.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4UK">
            <summary>
            Represents invoice compliant with xCBL 4.0 with customizations for United Kingdom
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4NO">
            <summary>
            Represents invoice compliant with xCBL 4.0 with customizations for Norway
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeMasterDataExchange">
            <summary>
            Represents the master data exchage document
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4Trip2USAOther">
            <summary>
            Represents invoice compliant with xCBL 4.0 with customizations for USA Other
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.RemittanceAdvice">
            <summary>
            Remittance Advice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.RemittanceAdviceInvoicingDetail">
            <summary>
            Remittance Advice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.EntrySheetResponse">
            <summary>
            Service Entry Sheet Response
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.EntrySheet">
            <summary>
            Service Entry Sheet
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.EntrySheetLine">
            <summary>
            Service Entry Sheet line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4Canada">
            <summary>
            Represents invoice compliant with xCBL 4.0 with customizations for Canada
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoiceLinexCBL4Canada">
            <summary>
            Represents invoice line compliant with xCBL 4.0 with customizations for Canada
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeInvoicexCBL4IT">
            <summary>
            Represents invoice compliant with xCBL 4.0 with customizations for Italy
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeEntrySheetLineEurope">
            <summary>
            Represents Entry Sheet line compliant with xCBL4.0 with customizations for Europe
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeEntrySheetLineFrance">
            <summary>
            Represents Entry Sheet line compliant with xCBL4.0 with customizations for France
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeEntrySheetLineCanada">
            <summary>
            Represents Entry Sheet line compliant with xCBL4.0 with customizations for Canada
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeEntrySheetFrance">
            <summary>
            Represents Entry Sheet compliant with xCBL4.0 with customizations for France
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DocumentType.typeEntrySheetCanada">
            <summary>
            Represents Entry Sheet compliant with xCBL4.0 with customizations for Canada
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.ApplicationBaseException">
            <summary>
            Common base exception class for all the O2I application exceptions.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.IGuidTagged">
            <summary>
            Allows objects to be taggable, allowing former to establish indirect relationship and/or collaborate.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.IGuidTagged.Tag">
            <summary>
            Exposes object's tag (guid) that can be used for collaboration purposes.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.ILoggableException">
            <summary>
            Exposes exception which can be effectively logged.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.ILoggableException.Id">
            <summary>
            Exposes exception id to be logged.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.ILoggableException.Tag">
            <summary>
            Gets or sets information tag which can be used for collaboration purposes.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.ILoggableException.Message">
            <summary>
            Exposes exception message to be logged.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.ILoggableException.Details">
            <summary>
            Gets extra exception information to be logged.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ApplicationBaseException.#ctor">
            <summary>
            Constructs exception class using default parameters.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ApplicationBaseException.#ctor(System.String)">
            <summary>
            Constructs exception class given exception detail message.
            </summary>
            <param name="details">Exception detail message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ApplicationBaseException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ApplicationBaseException.SetupInstance(System.String,System.Exception)">
            <summary>
            Sets up instance of exception class.
            </summary>
            <param name="details">The details.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ApplicationBaseException.GetExceptionMapAttribute(System.Type)">
            <summary>
            Gets Exception Map enum value attached to the given class type.
            </summary>
            <param name="classType">Type of the class to be examined.</param>
            <returns><see cref="T:TRR.O2I.Common.Exceptions.ExceptionMapAttribute"/> instance or null if no attribute is attached.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ApplicationBaseException.GetLocalizationAttribute(TRR.O2I.Common.Exceptions.ExceptionMap)">
            <summary>
            Gets <see cref="T:TRR.O2I.Common.Exceptions.LocalizationAttribute"/> instance attached to the exception map value.
            </summary>
            <param name="exceptionMapId">Exception map id to be examined.</param>
            <returns><see cref="T:TRR.O2I.Common.Exceptions.LocalizationAttribute"/> instance or null if no attribute is attached.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ApplicationBaseException.Localized(TRR.O2I.Common.Exceptions.ApplicationBaseException,System.String,System.Int32,System.Object[])">
            <summary>
            Sets up the exception instance for localization.
            </summary>
            <param name="exception">The exception.</param>
            <param name="defaultMessage">Default English exception message.</param>
            <param name="labelID">PDS LabelID for localized text.</param>
            <param name="parameters">Parameters for formatting the exception message. These will be processed by string.Format().</param>
            <returns>The localized exception instance.</returns>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.ApplicationBaseException.Tag">
            <summary>
            Tag guid used for collaboration purposes.
            Please refer to <see cref="P:TRR.O2I.Common.Exceptions.IGuidTagged.Tag"/> member description to get more details.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.ApplicationBaseException.Message">
            <summary>
            Gets message in english US locale.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.ApplicationBaseException.Id">
            <summary>
            Exposes exception Id, which is an ExceptionMap entry.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.ApplicationBaseException.TRR#O2I#Common#Core#Logging#ILoggableException#Id">
            <summary>
            Exposes exception id to be logged.
            Please refer to <see cref="P:TRR.O2I.Common.Core.Logging.ILoggableException.Id"/> member description to get more details.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.ApplicationBaseException.Details">
            <summary>
            Gets extra exception information to be logged.
            Please refer to <see cref="P:TRR.O2I.Common.Core.Logging.ILoggableException.Details"/> member description to get more details.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Exceptions.ArithmeticOverflowException">
            <summary>
            Exception class to throw when arithmetic overflow was occured.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Exceptions.ArithmeticOverflowException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Exceptions.ArithmeticOverflowException"/> class.
            </summary>
            <param name="details">The details.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Exceptions.ArithmeticOverflowException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Exceptions.ArithmeticOverflowException"/> class.
            </summary>
            <param name="details">The details.</param>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.BusinessLogicException">
            <summary>
            Exception template class for copy-pasting.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.BusinessLogicException.#ctor">
            <summary>
            Constructs exception class using default parameters.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.BusinessLogicException.#ctor(System.String)">
            <summary>
            Constructs exception class given exception detail message.
            </summary>
            <param name="details">Exception detail message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.BusinessLogicException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.DataAccessGeneralException">
            <summary>
            Thrown by the DataAccess layer
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.DataAccessGeneralException.#ctor(System.String)">
            <summary>
            Constructs exception class given exception detail message.
            </summary>
            <param name="details">Exception detail message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.DataAccessGeneralException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.DataAccessGeneralException.#ctor(System.String,System.Exception,System.Data.IDbCommand)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
            <param name="sqlCommand">The SQL command.</param>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.DataAccessGeneralException.SqlCommand">
            <summary>
            Gets the SQL command.
            </summary>
            <value>The SQL command.</value>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.DocumentXMLInvalidException">
            <summary>
            DocumentXMLInvalidException exception
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.DocumentXMLInvalidException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Exceptions.ExceptionInvestigator">
            <summary>
            Finds the data in the exception.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Exceptions.ExceptionInvestigator.FindRecursive``1(System.Exception)">
            <summary>
            Finds the recursive.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Exceptions.ExceptionInvestigator.GetDocumentInfo(System.Exception)">
            <summary>
            Gets the document info.
            </summary>
            <param name="exception">The exception info.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.ExceptionMap">
            <summary>
            Exception map, registers exceptions along with their corresponding localization data.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.ApplicationBase">
            <summary>
            General application exception entry.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.BusunessLogicGeneral">
            <summary>
            General business logic exception entry.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.SystemException">
            <summary>
            General system exception entry.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.QueueItemProcessing">
            <summary>
            Error occured in the course of enqueued item processing.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.QueueItemProcessingFailure">
            <summary>
            Error occured: enqueued item processing failure.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.QueueItemValidationFailure">
            <summary>
            Error occured: enqueued item validation failure.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.ServiceLogicGeneral">
            <summary>
            General service logic exception entry.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.WebServiceInteractionFailure">
            <summary>
            General service logic exception entry.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.TRxDocumentValidatingFailure">
            <summary>
            Error occured: TRx service doesn't validate input document.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.TRxDocumentProcessingFailure">
            <summary>
            Error occured: TRx service failed at document processing.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.QueueItemSaving">
            <summary>
            Error occured: unable to store item in queue.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DataAccessGeneral">
            <summary>
            Error occured accessing the database
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.HttpRequestToActionParsing">
            <summary>
            Error occured: unable to build UIAction from Http request
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.WorkflowXMLValidation">
            <summary>
            Error occured: workflow XML is invalid
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.WorkflowParsing">
            <summary>
            Error occured: unable to parse workflow
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.UnsupportedWorkflowStateAction">
            <summary>
            Error occured: unable resolve UI action, because it is unsupported by current workflow state
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.WorkflowCheckExecution">
            <summary>
            Error occured: unable execute workflow state check
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.IvalidAction">
            <summary>
            Error occured: invalid UI action, check all required parameters
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.UndefinedConfigurationValue">
            <summary>
            Error occured: undefined configuration value name
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.UndefinedConfigurationScope">
            <summary>
            Error occured: undefined configuration scope name
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DatabindingFailure">
            <summary>
            Error occured. Unble to continue databinding process
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.WorkflowActionProcessing">
            <summary>
            Error occured: unable to process workflow action
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.WorkflowDataActionProcessing">
            <summary>
            Error occured: unable to load data from workflow data-action
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.PresentationLogicGeneral">
            <summary>
            General presentation logic exception entry.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DatabindingFormatting">
            <summary>
            Error occured: unable to format or parse object during databinding
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DuplicateInvoiceNumber">
            <summary>
            Error occured: duplicated Invoice number
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DuplicateASNNumber">
            <summary>
            DuplicationASNNuber
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.ExtensionProcessing">
            <summary>
            Error occured: unable to process extension
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.Validation">
            <summary>
            Validation failure
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DocumentShredderError">
            <summary>
            DocumentShredder core error
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.XSDValidation">
            <summary>
            XSD Validation error
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DuplicatePOException">
            <summary>
            DuplicatePO Error
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.COWithoutPO">
            <summary>
            COWithoutPO Error
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.GRWithoutPO">
            <summary>
            GR without PO Error
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.GRBadASNReference">
            <summary>
            Bad ASN reference in GR
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DatabaseUnavailable">
            <summary>
            Connection to the database failed
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.SecurityException">
            <summary>
            Security exception occured.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DuplicateLineItemException">
            <summary>
            Duplicate line item was found
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.COMergingException">
            <summary>
            Error merging the received CO
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.NoAccountCodeInPO">
            <summary>
            No account was found in the incoming Purchase Order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.POPendingNotification">
            <summary>
            Attention. Pending order timeout elapsed.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.COPendingNotification">
            <summary>
            Attention. Pending change order timeout elapsed.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.GRLineWithoutPOLine">
            <summary>
            The GR Line referenced a non existent PO Line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DuplicateGRException">
            <summary>
            DuplicateGR Error
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DocumentXMLInvalid">
            <summary>
            Xml invalid error
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.NoQuantityForCancellationGRException">
            <summary>
            No QuantityCondition for Cancellation GR.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DuplicateCAException">
            <summary>
            Duplicate CA Error
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.CABadPOReference">
            <summary>
            Bad PO reference
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.CABadPOLineReference">
            <summary>
            Bad PO Line reference
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.CABadTypeException">
            <summary>
            Bad CA type value
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.ArithmeticOverflowException">
            <summary>
            Value has arithmetic overflow
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DocumentSuccessfulCompletionNotificationException">
            <summary>
             Indicates that document was successfully processed
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.WebServiceBusinessLogicFailure">
            <summary>
            
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.MixedItemConditionGRException">
            <summary>
            
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMap.DocumentSenderError">
            <summary>
            DocumentSender core error
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.ExceptionMapAttribute">
            <summary>
            Exception map attribute, allows ExceptionMap enumeration value to be mapped to exception.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.ExceptionMapAttribute.exceptionMapId">
            <summary>
            Exception map id holder.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ExceptionMapAttribute.#ctor(TRR.O2I.Common.Exceptions.ExceptionMap)">
            <summary>
            Constructs ExceptionMapAttribute instance given the ExceptionMap id.
            </summary>
            <param name="exceptionMapId">ExceptionMap enumeration value.</param>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.ExceptionMapAttribute.ExceptionMapId">
            <summary>
            Gets the ExceptionMap enumeration value.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.ExceptionMapSqlGenerator">
            <summary>
            SQL script generator for ExceptionMap type
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ISqlGenerator">
            <summary>
            Interaface for Sql generator, used in SqlGeneratorAttribute.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ISqlGenerator.GenerateSqlScript(System.Type)">
            <summary>
            Method must parce target type and return SQL script for database filling.
            </summary>
            <param name="targetType">Type to analize.</param>
            <returns>string contains SQL script for databse filling.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ExceptionMapSqlGenerator.GenerateSqlScript(System.Type)">
            <summary>
            Generates SQL script for filling localize message table for exceptions. 
            </summary>
            <param name="targetType">Must be an ExceptionMap type.</param>
            <returns>string with SQL script.</returns>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.ExtensionProcessingException">
            <summary>
            Exception template class for copy-pasting.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.PresentationLogicException">
            <summary>
            Exception template class for copy-pasting.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.PresentationLogicException.#ctor">
            <summary>
            Constructs exception class using default parameters.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.PresentationLogicException.#ctor(System.String)">
            <summary>
            Constructs exception class given exception detail message.
            </summary>
            <param name="details">Exception detail message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.PresentationLogicException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ExtensionProcessingException.#ctor(System.String)">
            <summary>
            Constructs exception class given exception detail message.
            </summary>
            <param name="details">Exception detail message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ExtensionProcessingException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.LocalizationAttribute">
            <summary>
            Localization attribute, holds localization id and default message in EN-US locale.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.LocalizationAttribute.localizationId">
            <summary>
            Localization Id value holder
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Exceptions.LocalizationAttribute.messageEN">
            <summary>
            Message (EN-US locale) holder
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.LocalizationAttribute.#ctor(System.Int32,System.String)">
            <summary>
            Constructs localization attribute instance given the localization id and message in EN-US locale.
            </summary>
            <param name="localizationId">Id to be used by localization framework.</param>
            <param name="messageEN">Message in  EN-US locale.</param>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.LocalizationAttribute.LocalizationId">
            <summary>
            Gets id to be used by localization framework.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Exceptions.LocalizationAttribute.MessageEN">
            <summary>
            Gets message in EN-US locale.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.SecurityException">
            <summary>
            Security exception.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.SystemException">
            <summary>
            Exception template class for copy-pasting.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.SystemException.#ctor(System.String)">
            <summary>
            Constructs exception class given exception detail message.
            </summary>
            <param name="details">Exception detail message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.SystemException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.SecurityException.#ctor(System.String)">
            <summary>
            Constructs exception class given exception detail message.
            </summary>
            <param name="details">Exception detail message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.SecurityException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.ServiceLogicException">
            <summary>
            Exception template class for copy-pasting.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ServiceLogicException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.ValidationException">
            <summary>
            Server side and buisness logic Validation Exception.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ValidationException.#ctor">
            <summary>
            Constructs exception class using default parameters.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ValidationException.#ctor(System.String)">
            <summary>
            Constructs exception class given exception detail message.
            </summary>
            <param name="details">Exception detail message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Exceptions.XSDValidationException">
            <summary>
            XSD Validation exception
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Exceptions.XSDValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.GRPurposeCoded">
            <summary>
            Purpose code of th Goods Reciept.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.GRPurposeCoded.Cancellation">
            <summary>
            Cancellation
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.GRPurposeCoded.Replace">
            <summary>
            Replace
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.GRPurposeCoded.Confirmation">
            <summary>
            Confirmation
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.GRPurposeCoded.Duplicate">
            <summary>
            Duplicate
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.GRPurposeCoded.Original">
            <summary>
            Original
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.GRPurposeCoded.Change">
            <summary>
            Change
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.GRPurposeCoded.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.IContextService">
            <summary>
            Basic context service accessor interface.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.IContextService.Initialize">
            <summary>
            Gives a chance for context service to be initialized.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.IContextService.UnInitialize">
            <summary>
            Gives a chance for context service to be uninitialized.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IContextService.Items">
            <summary>
            Exposes dictionary of the context items.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.IContextServiceEx">
            <summary>
            Specialized context service accessor interface.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IContextServiceEx.UIAction">
            <summary>
            Gets UIAction associated with the current context.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IContextServiceEx.UserInfo">
            <summary>
            Exposes various information about logged-in used.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IContextServiceEx.BuyerInfo">
            <summary>
            Exposes various information about corresponding buyer.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IContextServiceEx.LoginAsUserId">
            <summary>
            This is the user id of the curent user 
            or the user id of the login as requestor, if login as session is started
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.IContextServiceProvider">
            <summary>
            IContextServiceProvider interface.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.IContextServiceProvider.EngageContext(TRR.O2I.Common.Core.IContextService)">
            <summary>
            EngageContext
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IContextServiceProvider.GetContext">
            <summary>
            GetContext
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IContextServiceProvider.RestoreContext(System.Object)">
            <summary>
            RestoreContext
            </summary>
            <param name="tag"></param>
        </member>
        <member name="T:TRR.O2I.Common.Core.ICurrencyHelper">
            <summary>
            Base interface for Currency Helper
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ICurrencyHelper.Format(System.Decimal)">
            <summary>
            Formats the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ICurrencyHelper.Format(System.Decimal,System.Int32,System.Int32)">
            <summary>
            Formats the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="maxCurrencyDecimalDisplay">The max currency decimal display.</param>
            <param name="minCurrencyDecimalDisplay">The min currency decimal display.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ICurrencyHelper.Parse(System.String)">
            <summary>
            Parses the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeHelper">
            <summary>
            Base interface for Date Time Helper
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeHelper.ConvertTRUEUserStringToUTC(System.String)">
            <summary>
            Converts the TRUE user string to UTC.
            </summary>
            <param name="userString">The user string.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeHelper.ConvertUTCToTRUEUserString(System.DateTime)">
            <summary>
            Converts the UTC to TRUE user string.
            </summary>
            <param name="utcValue">The utc value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeHelper.ConvertUserTimeToUTC(System.DateTime)">
            <summary>
            Converts the user time to UTC.
            </summary>
            <param name="userValue">The user value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeHelper.ConvertUTCToUserTime(System.DateTime)">
            <summary>
            Converts the UTC to user time.
            </summary>
            <param name="utcValue">The utc value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeHelper.ConvertUserDateStringToUserDate(System.String)">
            <summary>
            Converts the user date string to user date.
            </summary>
            <param name="userString">The user string.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeHelper.ConvertUserTimeToUserString(System.DateTime,System.String)">
            <summary>
            Converts the user time to user string.
            </summary>
            <param name="userTime">The user time.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeHelper.ConvertUserStringToUserTime(System.String,System.String)">
            <summary>
            Converts the user string to user time.
            </summary>
            <param name="userString">The user string.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.IDateTimeHelper.ConvertUserDateToUserDateString(System.DateTime)">
            <summary>
            Converts DateTime value to the TRUE date (no time part) textual representation disregarding the time-zone transformation.
            </summary>
            <param name="userTime">DateTime value to be converted.</param>
            <returns>Textual representation of the userTime in the TRUE date format.</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.IO2iConfiguration">
            <summary>
            Provides access to O2I configuration
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.IO2iConfiguration.GetLogFilePath">
            <summary>
            Gets the log file path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IO2iConfiguration.GetIsLoggerOn">
            <summary>
            Gets the is logger on.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IO2iConfiguration.GetAppSettings(System.String)">
            <summary>
            Gets the app settings.
            </summary>
            <param name="CustomDocumentsPath">The custom documents path.</param>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.IsDebugInternal">
            <summary>
            Is application in debug mode? (shredding maps etc will be acquired from files or embedded resources instead of database)
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.MapBasePath">
            <summary>
             Base path for databinding maps
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.ContextServiceProviderClass">
            <summary>
            Context Service Provider implementation
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.IsXMLCompressionON">
            <summary>
            Gets a value indicating whether XML compression is ON.
            If flag is missing in configuration or has wrong value then XMLCompression.ON is returned
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.ContextServiceClass">
            <summary>
            Context Service Class
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.O2IPath">
            <summary>
            Exposes file system path which points to O2I directory
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.ScreenshotSavePath">
            <summary>
            Gets the screenshot save path.
            </summary>
            <value>The screenshot save path.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.TakeFailedTestsSnapshots">
            <summary>
            Gets a value indicating whether [take failed tests snapshots].
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.ContextHelpDirectory">
            <summary>
            Exposes web path to a root directory containing context  help files.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.EmailTo">
            <summary>
            e-mail to
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.ImageBasePath">
            <summary>
            Exposes web path to a directory containing O2I images
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.AppPath">
            <summary>
            Exposes web path to application root
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.RenderTRIPNameControl">
            <summary>
            If true TRIP Name is displayed at the top of each page.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.AttachmentMaxSizeWhileUpload">
            <summary>
            Gets the attachment max size while upload.
            </summary>
            <value>The attachment max size while upload.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.PdsConnectionString">
            <summary>
            Gets the PDS connection string.
            </summary>
            <value>The PDS connection string.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.ShowCustomErrorPage">
            <summary>
            Gets a value indicating whether show custom error page.
            </summary>
            <value>
            	<c>true</c> if show custom error page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.RequestPage">
            <summary>
            Gets the request page.
            </summary>
            <value>The request page.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.RequestPageWithQueryString">
            <summary>
            Gets the request page with query string.
            </summary>
            <value>The request page with query string.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.RedirectTime">
            <summary>
            Gets the redirect time.
            </summary>
            <value>The redirect time.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.ConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.TRUERootDirectory">
            <summary>
            Exposes file path to TRUE root directory (e.g. D:\TRUE)
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.ConsoleWorkingDirectory">
            <summary>
            Exposes file path to directory where current console is running
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.UseRealShredder">
            <summary>
            Gets the use real shredder.
            </summary>
            <value>The use real shredder.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.PDFConfigurationPath">
            <summary>
            Gets the PDF configuration path.
            </summary>
            <value>The PDF configuration path.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.ViewBasePath">
            <summary>
            Gets the view base path.
            </summary>
            <value>The view base path.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.PageBasePath">
            <summary>
            Gets the page base path.
            </summary>
            <value>The page base path.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.BulkMailConnectionString">
            <summary>
            Bulks the mail connection string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.SubItemsPerInvoiceLineLimit">
            <summary>
            Gets the sub items per invoice line count that could be added via mass addition feature.
            </summary>
            <value>The sub items per invoice line limit.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.IntegrationFacadeClass">
            <summary>
            Gets the integration facade class name.
            </summary>
            <value>The integration facade class.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IO2iConfiguration.MimeTypePerExtension">
            <summary>
            Gets the MIME type per extension.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.IQuantityHelper">
            <summary>
            Base interface for QuantityHelpers
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.IQuantityHelper.Format(System.Decimal)">
            <summary>
            Formats the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IQuantityHelper.Parse(System.String)">
            <summary>
            Parses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IQuantityHelper.XmlFormat(System.Decimal)">
            <summary>
            Format decimal value to xml-string representation
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.IQuantityHelper.XmlFormat(System.String)">
            <summary>
            Format decimal xml-string value to decimal xml-string representation
            </summary>
            <param name="value">decimal xml-string value</param>
            <returns>formatted decimal xml-string value(with min/max decimal place settings applied)</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.BuyerInformationBlock">
            <summary>
            Holds various buyer-related information.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.BuyerInformationBlock.#ctor(System.Int32,Cch.Commerster.Core.Localization.TimeZoneIdentifier,TRR.O2I.Common.Core.ITRIPConfiguration,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes instance of BuyerInformationBlock.
            </summary>
            <param name="buyerId">Buyer identificator.</param>
            <param name="timeZoneOffset">Time zone offset associated with current buyer company.</param>
            <param name="tripConfiguration">TRIP configuration object associated with current buyer company.</param>
            <param name="numberOfPriceDecimals">Number of price decimals.</param>
            <param name="numberOfQuantityDecimals">Number of quantity decimals.</param>
            <param name="vat">vat id.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.BuyerInformationBlock.TimeZoneOffset">
            <summary>
            Gets the buyer's timezone offset in milliseconds.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.BuyerInformationBlock.TRIPConfiguration">
            <summary>
            TRIP configuration object associated with the buyer.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.BuyerInformationBlock.NumberOfPriceDecimals">
            <summary>
            Number of price decimals
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.BuyerInformationBlock.NumberOfQuantityDecimals">
            <summary>
            Number of quantity decimals
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.BuyerInformationBlock.BuyerID">
            <summary>
            BuyerID
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.BuyerInformationBlock.Vat">
            <summary>
            vat id
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.CacheManager">
            <summary>
            Cache manager class implementation
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.CacheManager.Application">
            <summary>
            Gets the application level cache.
            </summary>
            <value>The application cache.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.CacheManager.Context">
            <summary>
            Gets the context level cache.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.CacheManager.Session">
            <summary>
            Gets the session level cache.
            </summary>
            <value>The session.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.ClassActivator">
            <summary>
            Summary description for Activator.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ClassActivator.CreateInstance(System.String)">
            <summary>
            Creates default instance.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ClassActivator.CreateInstance(System.String,System.String)">
            <summary>
            Creates default instance and checks required interface.
            </summary>
            <param name="typeName"></param>
            <param name="requiredInterfaceName"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ClassActivator.CreateInstance(System.Type)">
            <summary>
            Creates Instance of object.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.CompressionHelper">
            <summary>
            CompressionHelper class.Used for compressing/decompressing fields.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.CompressionHelper.Compress(System.String)">
            <summary>
            Compresses the specified contents.
            </summary>
            <param name="contents">Contents.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.CompressionHelper.Compress(System.IO.MemoryStream)">
            <summary>
            Compresses the specified contents.
            </summary>
            <param name="contents">Contents.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.CompressionHelper.Extract(System.Byte[])">
            <summary>
            Extracts the specified contents.
            </summary>
            <param name="contents">Contents.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.CompressionHelper.ExtractIntoStream(System.Byte[])">
            <summary>
            Extracts the specified contents into memory stream.
            </summary>
            <param name="contents">Contents.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.CompressionHelper.IsZipped(System.Byte[])">
            <summary>
            Determines whether [input is zipped] [the specified input].
            </summary>
            <param name="input">Input.</param>
            <returns>
            	<c>true</c> if [input is zipped] [the specified input]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.O2iConfiguration">
            <summary>
            O2I configuration.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.O2iConfiguration.#ctor(System.String)">
            <summary>
            </summary>
            <param name="sectionName"></param>
        </member>
        <member name="M:TRR.O2I.Common.Core.O2iConfiguration.GetLogFilePath">
            <summary>
            Gets the log file path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.O2iConfiguration.GetIsLoggerOn">
            <summary>
            Gets the is logger on.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.O2iConfiguration.GetAppSettings(System.String)">
            <summary>
            Gets the app settings.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.Instance">
            <summary>
            static member, to return the same instance of this class
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.AppPath">
            <summary>
            Exposes web path to application root
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.PageBasePath">
            <summary>
            Exposes web path which points to a directory containing O2I pages
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ScreenshotSavePath">
            <summary>
            Gets the screenshot save path.
            </summary>
            <value>The screenshot save path.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.TakeFailedTestsSnapshots">
            <summary>
            Gets a value indicating whether failed tests snapshots taking is required.
            </summary>
            <value></value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ViewBasePath">
            <summary>
            Exposes web path which points to a directory containing O2I views
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.MapBasePath">
            <summary>
            Exposes file system path which points to a directory containing O2I UI <c>xml</c> maps
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ImageBasePath">
            <summary>
            Exposes web path to a directory containing O2I images
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.RenderTRIPNameControl">
            <summary>
            If true TRIP Name is displayed at the top of each page.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.PdsConnectionString">
            <summary>
            Gets the PDS connection string.
            </summary>
            <value>The PDS connection string.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ShowCustomErrorPage">
            <summary>
            Gets a value indicating whether show custom error page.
            </summary>
            <value><c>true</c> if show custom error page; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.RequestPage">
            <summary>
            Gets the request page.
            </summary>
            <value>The request page.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.RequestPageWithQueryString">
            <summary>
            Gets the request page with query string.
            </summary>
            <value>The request page with query string.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.RedirectTime">
            <summary>
            Gets the redirect time.
            </summary>
            <value>The redirect time.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ConsoleWorkingDirectory">
            <summary>
            Exposes file path to directory where current console is running
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.UseRealShredder">
            <summary>
            Gets the use real shredder.
            </summary>
            <value>The use real shredder.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.PDFConfigurationPath">
            <summary>
            Gets the PDF configuration path.
            </summary>
            <value>The PDF configuration path.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.TRUERootDirectory">
            <summary>
            Exposes file path to TRUE root directory (e.g. D:\TRUE)
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.O2IPath">
            <summary>
            Exposes file system path which points to O2I directory
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ContextHelpDirectory">
            <summary>
            Exposes web path to a root directory containing context  help files.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.AttachmentMaxSizeWhileUpload">
            <summary>
            Gets the attachment max size while upload.
            </summary>
            <value>The attachment max size while upload.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.SubItemsPerInvoiceLineLimit">
            <summary>
            Gets the sub items per invoice line count that could be added via mass addition feature.
            </summary>
            <value>The sub items per invoice line limit.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ContextServiceClass">
            <summary>
            Context Service Class
            </summary>
            <value></value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.IsXMLCompressionON">
            <summary>
            Gets a value indicating whether XMLcompression is ON.
            If flag is missing in configuration or has wrong value then XMLCompression.ON is returned
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.IsDebugInternal">
            <summary>
            Is application in debug mode? (shredding maps etc will be acquired from files or embedded resources instead of database)
            </summary>
            <value></value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.BulkMailConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ContextServiceProviderClass">
            <summary>
            Context Service Provider implementation
            </summary>
            <value></value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.EmailTo">
            <summary>
            e-mail to
            </summary>
            <value></value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.ActivationInterval">
            <summary>
            Gets the activation interval.
            </summary>
            <value>The activation interval.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.HeartBeatInterval">
            <summary>
            Gets the heart beat interval.
            </summary>
            <value>The heart beat interval.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.IntegrationFacadeClass">
            <summary>
            Gets the integration facade class name.
            </summary>
            <value>The integration facade class.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.O2iConfiguration.MimeTypePerExtension">
            <summary>
            Gets the MIME type per extension.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextCacheManager">
            <summary>
            Context-wide cache manager.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextCacheManager.#ctor">
            <summary>
            Singleton instantiation point.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextCacheManager.Find(System.String)">
            <summary>
            Looks up ceche item by given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextCacheManager.Add(System.String,System.Object)">
            <summary>
            Adds entry under specified key, exception is thrown if entry already exists).
            </summary>
            <param name="key">Entry key.</param>
            <param name="val">Entry value.</param>
            <returns>Cache item.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextCacheManager.Insert(System.String,System.Object)">
            <summary>
            Inserts (adds or updates) value under the specified key.
            </summary>
            <param name="key">Entry key.</param>
            <param name="val">Entry value.</param>
            <returns>Cache item.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextCacheManager.Remove(System.String)">
            <summary>
            Removes item from the cache given its key.
            </summary>
            <param name="key">Entry key.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextCacheManager.GetCacheRepository">
            <summary>
            Gets cache repository.
            </summary>
            <returns>Cache repository.</returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextCacheManager.Instance">
            <summary>
            Exposes singleton access point.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextService">
            <summary>
            Encapsulates all user-specific information.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.ContextService.StatusMessage">
            <summary>
            TODO: add comments
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.ContextService.CacheManagerKey">
            <summary>
            Defines the key in the current context for the per-request cache
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextService.IsExist">
            <summary>
            Determines whether this instance is exist.
            </summary>
            <returns>
            	<c>true</c> if this instance is exist; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextService.Current">
            <summary>
            Gets an instance of ContextService.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextService.UserName">
            <summary>
            Gets current UserName.
            DEPRECATED: to be removed in the forthcoming version
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextService.LoginAsUserId">
            <summary>
            This is the user id of the curent user 
            or the user id of the login as requestor, if login as session is started
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextServiceObjectBase">
            <summary>
            Concrete implementation of the IContextService.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.ContextServiceObjectBase.items">
            <summary>
            Holds items dictionary.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceObjectBase.#ctor">
            <summary>
            Initializes class instance.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceObjectBase.Initialize">
            <summary>
            Default implementation does nothing.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceObjectBase.UnInitialize">
            <summary>
            Default implementation does nothing.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextServiceObjectBase.UIAction">
            <summary>
            Implementation of the IContextServiceEx.Action property.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextServiceObjectBase.UserInfo">
            <summary>
            Gets or Sets User Information.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextServiceObjectBase.BuyerInfo">
            <summary>
            Gets or Sets Buyer Information.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextServiceObjectBase.LoginAsUserId">
            <summary>
            This is the user id of the curent user 
            or the user id of the login as requestor, if login as session is started
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ContextServiceObjectBase.Items">
            <summary>
            Implementation of the IContextService.Items property.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextServiceObjectIS">
            <summary>
            Implementation of IS-specific context service object.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceObjectIS.Initialize">
            <summary>
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextServiceObjectForWebService">
            <summary>
            
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceObjectForWebService.#ctor(System.String)">
            <summary>
            Public constructor.
            </summary>
            <param name="languageCode"></param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceObjectForWebService.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceObjectForWebService.Initialize">
            <summary>
            Overriden. Initializes the context service instance.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextServiceProviderIS">
            <summary>
            Generic ContextServiceProvider implementation.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceProviderIS.EngageContext(TRR.O2I.Common.Core.IContextService)">
            <summary>
            EngageContext
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceProviderIS.GetContext">
            <summary>
            GetContext
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceProviderIS.RestoreContext(System.Object)">
            <summary>
            RestoreContext
            </summary>
            <param name="tag"></param>
        </member>
        <member name="T:TRR.O2I.Common.Core.ContextServiceWrapper">
            <summary>
            Wrapper for the ContextService. Allows automatic resource handling for the ContextService.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.ContextServiceWrapper.tag">
            <summary>
            Holds tag object require for successful restoration of the context state.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.ContextServiceWrapper.contextInstance">
            <summary>
            Holds reference to context service instance.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.ContextServiceWrapper.providerInstance">
            <summary>
            Holds reference to service provider instance.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceWrapper.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceWrapper.#ctor(TRR.O2I.Common.Core.IContextService)">
            <summary>
            Engages ContextService instance automatic resource management.
            </summary>
            <param name="contextInstance">Instance of IContextService to be managed.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceWrapper.WrapContext(TRR.O2I.Common.Core.IContextService)">
            <summary>
            Helper method wraps context.
            </summary>
            <param name="aContextInstance">Instance of IContextService to be managed.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.ContextServiceWrapper.Dispose">
            <summary>
            Ensures context is always restored in the correct state.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.CurrencyHelper">
            <summary>
            Utility class contains plenty of currency conversion functions.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.CurrencyHelper.Format(System.Decimal)">
            <summary>
            Performs formatting against provided value using defalut settings.
            </summary>
            <param name="value">Value to format.</param>
            <returns>Formatted value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.CurrencyHelper.Format(System.Decimal,System.Int32,System.Int32)">
            <summary>
            Formats the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="maxCurrencyDecimalDisplay">The max currency decimal display.</param>
            <param name="minCurrencyDecimalDisplay">The min currency decimal display.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.CurrencyHelper.Format(System.Decimal,System.Int32,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Performs formatting against provided value.
            </summary>
            <param name="value">Value to format.</param>
            <param name="maxCurrencyDecimalDisplay">Max number of digits after comma.</param>
            <param name="minCurrencyDecimalDisplay">Min number of digits after comma.</param>
            <param name="currentCulture">The current culture.</param>
            <returns>Formatted value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.CurrencyHelper.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Performs parsing against provided value.
            </summary>
            <param name="data">Value to parse.</param>
            <param name="culture">The culture.</param>
            <returns>Parsed value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.CurrencyHelper.Parse(System.String)">
            <summary>
            Performs parsing against provided value.
            </summary>
            <param name="data">Value to parse.</param>
            <returns>Parsed value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.CurrencyHelper.TRR#O2I#Common#Core#ICurrencyHelper#Parse(System.String)">
            <summary>
            Parses the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.CurrencyHelper.XmlFormat(System.Decimal)">
            <summary>
            Formats decimal for output to XML.
            </summary>
            <param name="data">Data to format.</param>
            <remarks>
            Removes number group separator and replaces decimal separator with point (".").
            </remarks>
            <returns>Formatted data.</returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.CurrencyHelper.MinCurrencyDecimalDisplay">
            <summary>
            Gets MinCurrencyDecimalDisplay.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.CurrencyHelper.MaxCurrencyDecimalDisplay">
            <summary>
            Gets MaxCurrencyDecimalDisplay.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.CurrencyHelper.CurrencyDecimalSeparator">
            <summary>
            Gets CurrencyDecimalSeparator.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.CurrencyHelper.CurrencyGroupSeparator">
            <summary>
            Gets CurrencyGroupSeparator.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.CurrencyHelper.CurrencyRegExp">
            <summary>
            Gets Currency regular expression definition.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper">
            <summary>
            Utility class contains plenty of date-time conversion functions.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRUE_DATETIME_FORMAT">
            <summary>
            TRUE date time format specification
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRUE_DATETIME_REGEX">
            <summary>
            TRUE date time regex specification
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRUE_DATE_FORMAT">
            <summary>
            TRUE date time format specification
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRUE_DATE_REGEX">
            <summary>
            TRUE date time regex specification
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.DATABASE_DATETIME_FORMAT">
            <summary>
            Database date time format specification
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.DATABASE_DATETIME_REGEX">
            <summary>
            Database date time regex specification
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertTRUEUserStringToUTC(System.String)">
            <summary>
            Converts string which is supposed to be in TRUE date time format into UTC value.
            </summary>
            <param name="userString">string which is supposed to be in TRUE date time format.</param>
            <returns>UTC representation of userString or DateTime.MinValue if userString is empty.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRR#O2I#Common#Core#DateTimeUtil#IDateTimeHelper#ConvertTRUEUserStringToUTC(System.String)">
            <summary>
            Converts the TRUE user string to UTC.
            </summary>
            <param name="userString">The user string.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertUTCToTRUEUserString(System.DateTime)">
            <summary>
            Converts UTC date time value into the string which is supposed to be in TRUE date time format.
            </summary>
            <param name="utcValue">UTC DateTime value.</param>
            <returns>DateTime representation in the TRUE date time format.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRR#O2I#Common#Core#DateTimeUtil#IDateTimeHelper#ConvertUTCToTRUEUserString(System.DateTime)">
            <summary>
            Converts the UTC to TRUE user string.
            </summary>
            <param name="utcValue">The utc value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertTRUEUserStringToUserTime(System.String)">
            <summary>
            Converts string which is supposed to be in TRUE date time format into DateTime value doing no time-zone transformation.
            </summary>
            <param name="userString">string which is supposed to be in TRUE date time format.</param>
            <returns>DateTime result of value the coersing or DateTime.MinValue if userString happens to be empty.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertUserTimeToTRUEUserString(System.DateTime)">
            <summary>
            Converts DateTime value to the TRUE date time textual representation disregarding the time-zone transformation.
            </summary>
            <param name="userTime"></param>
            <returns>Textual representation of the userTime in the TRUE date time format.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertUserDateStringToUserDate(System.String)">
            <summary>
            Converts string which is supposed to be in TRUE date (no time part) format into DateTime value doing no time-zone transformation.
            </summary>
            <param name="userString">string which is supposed to be in TRUE date format.</param>
            <returns>DateTime result of value the coersing or DateTime.MinValue if userString happens to be empty.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRR#O2I#Common#Core#DateTimeUtil#IDateTimeHelper#ConvertUserDateStringToUserDate(System.String)">
            <summary>
            Converts the user date string to user date.
            </summary>
            <param name="userString">The user string.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertUserDateToUserDateString(System.DateTime)">
            <summary>
            Converts DateTime value to the TRUE date (no time part) textual representation disregarding the time-zone transformation.
            </summary>
            <param name="userTime">DateTime value to be converted.</param>
            <returns>Textual representation of the userTime in the TRUE date format.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertUserStringToUserTime(System.String,System.String)">
            <summary>
            Converts string into DateTime instance according to specified format setting.
            </summary>
            <param name="userString">Textual representation of the date time value.</param>
            <param name="format">Format setting to be used while parsing out.</param>
            <returns>DateTime result of value the coersing or DateTime.MinValue if userString happens to be empty.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRR#O2I#Common#Core#DateTimeUtil#IDateTimeHelper#ConvertUserStringToUserTime(System.String,System.String)">
            <summary>
            Converts the user string to user time.
            </summary>
            <param name="userString">The user string.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertUserTimeToUserString(System.DateTime,System.String)">
            <summary>
            Converts string into DateTime instance according to specified format setting.
            </summary>
            <param name="userTime">Textual representation of the date time value.</param>
            <param name="format">Format setting to be used while parsing out.</param>
            <returns>DateTime result of value the coersing or DateTime.MinValue if userString happens to be empty.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRR#O2I#Common#Core#DateTimeUtil#IDateTimeHelper#ConvertUserTimeToUserString(System.DateTime,System.String)">
            <summary>
            Converts the user time to user string.
            </summary>
            <param name="userTime">The user time.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertUserTimeToUTC(System.DateTime)">
            <summary>
            Converts date-time value in the the current user's time zome to UTC.
            </summary>
            <param name="userValue">Date time value in the current user's time zone.</param>
            <returns>UTC representation of the user's date time value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRR#O2I#Common#Core#DateTimeUtil#IDateTimeHelper#ConvertUserTimeToUTC(System.DateTime)">
            <summary>
            Converts the user time to UTC.
            </summary>
            <param name="userValue">The user value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertUTCToUserTime(System.DateTime)">
            <summary>
            Converts UTC date-time value to user local time using the setting from TRUE.
            </summary>
            <param name="utcValue">UTC DateTime value.</param>
            <returns>User's local DateTime value.</returns>
            <remarks>This function relies on TRIOUserStateManager which is available from the ContextService.</remarks>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRR#O2I#Common#Core#DateTimeUtil#IDateTimeHelper#ConvertUTCToUserTime(System.DateTime)">
            <summary>
            Converts the UTC to user time.
            </summary>
            <param name="utcValue">The utc value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.ConvertUTCToUserTime(System.DateTime,Cch.Commerster.Core.Localization.TimeZoneIdentifier,System.TimeSpan@)">
            <summary>
            Converts UTC date-time value to user local time given the user time zone offset.
            </summary>
            <param name="utcValue">UTC DateTime value.</param>
            <param name="userTimeZoneOffset">User's time zone offset specified in milliseconds.</param>
            <param name="offset">The offset.</param>
            <returns>User's local DateTime value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.GetUserTimeZoneGMTFormatted">
            <summary>
            Gets formatted time zone representation (+02:00 GMT) for the current user.
            </summary>
            <returns>GMT Formatted time zone value (like +02:00 GMT).</returns>
            <remarks>This function relies on TRIOUserStateManager which is available from the ContextService.</remarks>
        </member>
        <member name="P:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRUEDateTimeFormat">
            <summary>
            Gets TRUE date time format definition.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRUEDateTimeRegEx">
            <summary>
            Gets TRUE date time regular expression definition.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRUEDateFormat">
            <summary>
            Gets TRUE date format definition.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.TRUEDateRegEx">
            <summary>
            Gets TRUE date regular expression definition.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.DatabaseDateTimeFormat">
            <summary>
            Gets Database date format definition.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.DateTimeUtil.DateTimeHelper.DatabaseDateTimeRegEx">
            <summary>
            Gets Database date regular expression definition.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.FileContent">
            <summary>
            Summary description for FileContent.
            This class implements reading of file content and return it as string
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.FileContent.GetFileAsString(System.String)">
            <summary>
            Get file content as string.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.ITRIPConfiguration">
            <summary>
            Represents TRIP configuration object public accessor.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ITRIPConfiguration.GetDocumentTasks(TRR.O2I.Common.Core.DocumentType)">
            <summary>
            Retries tasks processors list for target document type.
            </summary>
            <param name="docType">Target document type.</param>
            <returns>Tasks processors list (assembly and class name).</returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.ITRIPConfiguration.Name">
            <summary>
            Gets TRIP Name.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.ITRIPConfiguration.PoOrCoElapsedTimePeriod">
            <summary>
            Gets elapse timeout for pending PO and CO notification.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ITRIPTaskProcesor">
            <summary>
            This is the interface which must be implemented by every
            TRIP tasks processor in the O2i system ...
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ITRIPTaskProcesor.ProcessTask(TRR.O2I.Common.Core.ITRIPConfiguration,System.Int32,TRR.O2I.Common.Core.DocumentType)">
            <summary>
            Process one task.
            </summary>
            <param name="trip">Active TRIP information.</param>
            <param name="documentRefID">Referenced document PK data.</param>
            <param name="documentType">Referenced document type.</param>
            <returns>Task processing status.</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.IUIAction">
            <summary>
            IUIAction interface
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.IUIAction.GetTargetCountry">
            <summary>
            Gets the target country.
            </summary>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.WorkflowID">
            <summary>
            Gets ID of workflow for action processing
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.ContextID">
            <summary>
            Gets ID of context for action processing
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.ActionID">
            <summary>
            Gets ID of action
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.AutoSave">
            <summary>
            Gets or Sets AutoSave flag
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.CausesValidation">
            <summary>
            Gets/sets flag wheather this action should trigger validation.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.ValidationGroup">
            <summary>
             Gets or sets ValidationGroup
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.ShowProgressBar">
            <summary>
            Gets/sets flag wheather this progress bar is shown.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.WaitUntilPageIsFullyLoaded">
            <summary>
            Gets or sets a avalue indicating whether the page should be fully loaded befor the action execution.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.IsAsync">
            <summary>
            Gets or sets a value indicating whether the action should be executed asynchronously.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.PanelsToShowProgressBarOn">
            <summary>
            Gets or sets a coma-delimited list of update panels which are supposed to be updated after clicking on the control.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.OnLoadScript">
            <summary>
            Gets or sets the script body which should be executed once page is fully loaded.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.ActionParams">
            <summary>
            Gets or Sets all action params (with Http request params).
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUIAction.RawActionParams">
            <summary>
            
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.IUITransferedToMultipage">
            <summary>
            IUITransferedToMultipage interface
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUITransferedToMultipage.MultiParams">
            <summary>
            Returns parameters hashtable, which contains as values arraylists of the item param value
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.IUserInformationBlock">
            <summary>
            Interface for user information block
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUserInformationBlock.BusinessProcessType">
            <summary>
            Gets or sets the type of the business process for current user is logged in.
            </summary>
            <value>The type of the business process.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUserInformationBlock.UserId">
            <summary>
            Gets the user id.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUserInformationBlock.CompanyId">
            <summary>
            Gets the supplier company id current user belings to.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUserInformationBlock.DisplayName">
            <summary>
            Gets the user display name.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUserInformationBlock.TimezoneOffset">
            <summary>
            Gets the user's timezone offset in milliseconds.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUserInformationBlock.LanguageCode">
            <summary>
            Gets the user's local language code.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUserInformationBlock.NumericFormat">
            <summary>
            Gets/sets various numeric format-related settings
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUserInformationBlock.IsAdmin">
            <summary>
            Gets a value indicating whether this instance is admin.
            </summary>
            <value><c>true</c> if this instance is admin; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.IUserInformationBlock.Vat">
            <summary>
            vat id.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.GenericResourceDescriptor">
            <summary>
            Denotes generic resource descriptor.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.ILocalizatonResourceDescriptor">
            <summary>
            Denotes resource to be localized.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Localization.ILocalizatonResourceDescriptor.Name">
            <summary>
            Gets the canonical name of the localizazation resource descriptor.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Localization.ILocalizatonResourceDescriptor.InValue">
            <summary>
            Gets input value which is to be translated.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Localization.ILocalizatonResourceDescriptor.LocalizedValue">
            <summary>
            Gets/sets the result of translation.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Localization.GenericResourceDescriptor.inValue">
            <summary>
            Holds in-value.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Localization.GenericResourceDescriptor.localizedValue">
            <summary>
            Holds localized value.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.GenericResourceDescriptor.#ctor(System.Object)">
            <summary>
            Initializes class instance.
            </summary>
            <param name="inValue">Input value which is to be translated.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Localization.GenericResourceDescriptor.Name">
            <summary>
            Gets the canonical name of the localizazation resource descriptor.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Localization.GenericResourceDescriptor.InValue">
            <summary>
            Gets input value which is to be translated.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Localization.GenericResourceDescriptor.LocalizedValue">
            <summary>
            Gets/sets the result of translation.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.ILocalizationManager">
            <summary>
            Base interface for Localization Manager
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.ILocalizationManager.TranslateMessage(System.Int32,System.String)">
            <summary>
            Returns the localized string of the specified localizationID, if not
            found returns the defaultMessage
            </summary>
            <param name="localizationId">The localization ID.</param>
            <param name="defaultMessage">The default message.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.IResourceLocalizator">
            <summary>
            Denotes facility which performs actual translation of a given resource.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.IResourceLocalizator.Localize(TRR.O2I.Common.Core.Localization.ILocalizatonResourceDescriptor)">
            <summary>
            Localizes the resource.
            </summary>
            <param name="resource">Resource descriptor carrying in the translation unit.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.LocalizationManager">
            <summary>
            Orchestrates the localization stuff.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Localization.LocalizationManager.instance">
            <summary>
            Holds singleton instance of Localization Manager.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.LocalizationManager.#ctor">
            <summary>
            Initializes class instance.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.LocalizationManager.LocalizeWebForm(System.Web.UI.Control)">
            <summary>
            Localizes context-sensitive help resource.
            </summary>
            <param name="control">Control which denotes the form's root.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.LocalizationManager.LocalizeWebPartControl(System.Web.UI.Control)">
            <summary>
            Localizes the web part control.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.LocalizationManager.LocalizeResource(TRR.O2I.Common.Core.Localization.WebPartControlResourceDescriptor)">
            <summary>
            Localizes the resource.
            </summary>
            <param name="descriptor">The descriptor.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.LocalizationManager.LocalizeResource(TRR.O2I.Common.Core.Localization.WebFormResourceDescriptor)">
            <summary>
            Localizes arbitrary resource given its descriptor.
            </summary>
            <param name="descriptor">Resource descriptor.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.LocalizationManager.TranslateMessage(System.Int32,System.String)">
            <summary>
            Returns the localized string of the specified localizationID, if not
            found returns the default Message
            </summary>
            <param name="localizationId"></param>
            <param name="defaultMessage"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.LocalizationManager.TranslateMessageReplaceComma(System.Int32,System.String)">
            <summary>
            Returns the localized string of the specified localization ID, if not
            found returns the default Message
            </summary>
            <param name="localizationID"></param>
            <param name="defaultMessage"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.LocalizationManager.TranslateMessage(System.String,System.Int32,System.String)">
            <summary>
            Translates the message.
            </summary>
            <param name="languageCode">The language code.</param>
            <param name="localizationId">The localization id.</param>
            <param name="defaultMessage">The default message.</param>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.Localization.LocalizationManager.Instance">
            <summary>
            Provides singleton instance access point.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.ResourceLocalizatorFactory">
            <summary>
            Concrete factory facility for resource localizator instances.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.ResourceLocalizatorFactory.#ctor">
            <summary>
            Initializes class instance.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Localization.ResourceLocalizatorFactory.Instance">
            <summary>
            Provides singleton instance access point.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.WebFormResourceDescriptor">
            <summary>
            Denotes web form localization resource descriptor.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.WebFormResourceDescriptor.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes class instance.
            </summary>
            <param name="control">Forms' root control.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Localization.WebPartControlResourceDescriptor">
            <summary>
            Denotes web part control localization resource descriptor.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Localization.WebPartControlResourceDescriptor.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes class instance.
            </summary>
            <param name="control">Forms' root control.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.ActivityType">
            <summary>
            Types of events for activity that could be logged.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.Send">
            <summary>
            Send
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.SaveDraft">
            <summary>
            SaveDraft
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.Reject">
            <summary>
            Reject
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.AddToBasket">
            <summary>
            Add to basket
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.RemoveAttachment">
            <summary>
            Remove attachment
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.AddLinesToBasket">
            <summary>
            Add lines to basket
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.BuildASNFromLines">
            <summary>
            Build ASN from lines
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.BuildInvoiceFromLines">
            <summary>
            Build invoice from lines
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.Delete">
            <summary>
            Delete document
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.CreateFromBasket">
            <summary>
            Create document from basket.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.RetrieveDefaults">
            <summary>
            Retrieve defaults.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.AddNewLine">
            <summary>
            Add new line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.DeleteLine">
            <summary>
            Delete line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.ASNItemInPackageDelete">
            <summary>
            Item In package Delete
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.ASNPackageSave">
            <summary>
            Package Save
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.ASNTransportDelete">
            <summary>
            Transport Delete
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.ASNPackageDelete">
            <summary>
            Package Delete
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.ImportLastStatus">
            <summary>
            Import Last Status
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.AddMultipleToBasket">
            <summary>
            Add Multiple To Basket
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.ExportToInvoice">
            <summary>
            Export To Invoice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.InvoiceLineAddNew">
            <summary>
            Invoice Line Add New
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.RemoveLine">
            <summary>
            Remove LIne
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.SaveLineAndReturn">
            <summary>
            Save line and return
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.AddTax">
            <summary>
            Add tax
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.RemoveTax">
            <summary>
            Remove tax
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.RejectOrderLine">
            <summary>
            Reject Order line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.UnRejectOrderLine">
            <summary>
            UnReject Order line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.RejectAllSelectedLines">
            <summary>
            Reject All Selected Lines
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.UploadAttachment">
            <summary>
            Upload attachment
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.UploadInvoice">
            <summary>
            Upload Invoice
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.ChangeStatus">
            <summary>
            Change State
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.Unreject">
            <summary>
            Unreject order
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.ApplyTaxToAllItems">
            <summary>
            Apply Tax To All Items
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.BuildSESFromLine">
            <summary>
             Build SES from Order Line
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.DeleteSES">
            <summary>
            Delete SES
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.AddNewSESSubLine">
            <summary>
            Add new subline to SES
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.DeleteSESSubLine">
            <summary>
            Delete SES subline
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.CreateInvoiceFromSES">
            <summary>
            Create invoice from SES
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.ActivityType.AddMultipleInvoiceLines">
            <summary>
            Add multiple invoice lines
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.DocumentInfo">
            <summary>
            Provides additional document information.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.DocumentInfo.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,TRR.O2I.Common.Core.DocumentType)">
            <summary>
            Constructs new DocumentInfo instance.
            </summary>
            <param name="supplierID">PDS id of the seller party of the document that triggered the alert</param>
            <param name="buyerID">PDS id of the buyer party of the document that triggered the alert</param>
            <param name="documentNumber">The document number.</param>
            <param name="docID">po number, supplier ref num, etc for the document that triggered the alert</param>
            <param name="urlDocID">the internal guid for the document (id in o2i_doc_xml table)</param>
            <param name="o2iDocumentID">the internal id of the document in O2i (orderID, changeorderid, etc)</param>
            <param name="accountCode">the account code in the document that triggered the alert</param>
            <param name="docType">the type of document that triggered the alert</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.DocumentInfo.#ctor">
            <summary>
            Public constructor. Parameters passed to constructor are not used.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.DocumentInfo.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,TRR.O2I.Common.Core.DocumentType,System.String,System.String,TRR.O2I.Common.Core.SupplierCountry)">
            <summary>
            Constructs new DocumentInfo instance.
            </summary>
            <param name="supplierID">PDS id of the seller party of the document that triggered the alert</param>
            <param name="buyerID">PDS id of the buyer party of the document that triggered the alert</param>
            <param name="docID">po number, supplier ref num, etc for the document that triggered the alert</param>
            <param name="urlDocID">the internal guid for the document (id in o2i_doc_xml table)</param>
            <param name="o2iDocumentID">the internal id of the document in O2i (orderID, changeorderid, etc)</param>
            <param name="accountCode">the account code in the document that triggered the alert</param>
            <param name="docType">the type of document that triggered the alert</param>
            <param name="relatedDocumentNo">purchase order id that triggered the alert</param>
            <param name="plantID">The plant ID.</param>
            <param name="documentNo">The document number</param>
            <param name="documentOriginalCountry">The document original country.</param>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.SupplierID">
            <summary>
            SupplierID
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.BuyerID">
            <summary>
            BuyerID
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.DocID">
            <summary>
            DocID
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.UrlDocID">
            <summary>
            UrlDocID
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.O2iDocumentID">
            <summary>
            O2iDocumentID
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.AccountCode">
            <summary>
            AccountCode
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.DocType">
            <summary>
            Document Type
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.RelatedDocumentNumber">
            <summary>
            Gets/sets the number of related document (Order, Invoice, etc.)
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.PlantID">
            <summary>
            Plant Id
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.DocumentInfo.DocumentNumber">
            <summary>
            Document Number
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.DocumentInfo.SourceDocumentNumber">
            <summary>
            Gets or sets the Number of the source document
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.DocumentInfo.Notes">
            <summary>
            Gets or sets notes for the document
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.DocumentInfo.DocumentOriginalCountry">
            <summary>
            The Origin country for a document
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.ITRLog">
            <summary>
            Custom interface to support type safe parameters.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.Error(System.String)">
            <summary>
            This method log exception with <see cref="T:TRR.O2I.Common.Core.Logging.LogLevel"/>.<c>Error</c> level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.Warning(System.String)">
            <summary>
            This method log exception with <see cref="T:TRR.O2I.Common.Core.Logging.LogLevel"/>.<c>Warning</c> level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.Warning(System.String,TRR.O2I.Common.Core.Logging.DocumentInfo)">
            <summary>
            This method log message with <c>Warning</c> level.
            </summary>
            <param name="message">Message to log.</param>
            <param name="documentInfo">The document info.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.Exception(System.Exception)">
            <summary>
            This method log exception with <see cref="T:TRR.O2I.Common.Core.Logging.LogLevel"/> delivered from exception definition attribute.
            </summary>
            <param name="exceptionInfo">Exception info to log.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.LogToFile(System.String)">
            <summary>
            Logs to file.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.Info(System.String,TRR.O2I.Common.Core.Logging.DocumentInfo)">
            <summary>
            This method log message with <c>Info</c> level.
            </summary>
            <param name="message">Message to log.</param>
            <param name="documentInfo">The document info.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.LogActivity(TRR.O2I.Common.Core.Logging.ActivityType,TRR.O2I.Common.Core.Logging.LoggableDocumentType,System.String)">
            <summary>
            Logs activity.
            </summary>
            <param name="activityType">Activity type.</param>
            <param name="docType">Document type.</param>
            <param name="documentId">Document id.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.LogActivity(TRR.O2I.Common.Core.Logging.ActivityType,TRR.O2I.Common.Core.Logging.LoggableDocumentType,System.String,System.String,System.String)">
            <summary>
            Logs the activity.
            </summary>
            <param name="activityType">The activity type.</param>
            <param name="message">The comment.</param>
            <param name="userName">Name of the user.</param>
            <param name="documentId">The document id.</param>
            <param name="documentType">Type of the document.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.Alert(TRR.O2I.Common.Exceptions.AlertType,System.String,TRR.O2I.Common.Core.Logging.DocumentInfo)">
            <summary>
            Alerts the specified exception.
            </summary>
            <param name="alertType">Type of the alert.</param>
            <param name="message">The message.</param>
            <param name="documentInfo">The document info.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.Alert(TRR.O2I.Common.Exceptions.AlertType,TRR.O2I.Common.Core.Logging.DocumentInfo,System.String)">
            <summary>
            Alerts the specified completion.
            </summary>
            <param name="alertType">The completion.</param>
            <param name="documentInfo">The info.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.ITRLog.SendEmailToSupport(System.Exception)">
            <summary>
            Sends the email to support.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.LogLevel">
            <summary>
            Log levels.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LogLevel.Info">
            <summary>
            Info log level
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LogLevel.Warning">
            <summary>
            Warning log level
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Logging.LogLevel.Error">
            <summary>
            Error log level
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.LogManager">
            <summary>
            Summary description for LogManager.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.LogManager"/> class.
            </summary>
            <param name="logActivities">if set to <c>true</c> [log activities].</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#Exception(System.Exception)">
            <summary>
            This method log exception with <see cref="T:TRR.O2I.Common.Core.Logging.LogLevel"/> delivered from exception definition attribute.
            </summary>
            <param name="exceptionInfo">Exception info to log.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#Error(System.String)">
            <summary>
            This method log message with <c>Error</c> level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#Warning(System.String)">
            <summary>
            This method log message with <c>Warning</c> level.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#Warning(System.String,TRR.O2I.Common.Core.Logging.DocumentInfo)">
            <summary>
            This method log message with <c>Warning</c> level.
            </summary>
            <param name="message">Message to log.</param>
            <param name="documentInfo">The document info.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#Info(System.String,TRR.O2I.Common.Core.Logging.DocumentInfo)">
            <summary>
            This method log message with <c>Info</c> level.
            </summary>
            <param name="message">Message to log.</param>
            <param name="documentInfo">The document info.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#LogToFile(System.String)">
            <summary>
            Logs to file.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#LogActivity(TRR.O2I.Common.Core.Logging.ActivityType,TRR.O2I.Common.Core.Logging.LoggableDocumentType,System.String)">
            <summary>
            Logs activity.
            </summary>
            <param name="activityType">Activity type.</param>
            <param name="docType">Document type.</param>
            <param name="documentId">Document id.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#LogActivity(TRR.O2I.Common.Core.Logging.ActivityType,TRR.O2I.Common.Core.Logging.LoggableDocumentType,System.String,System.String,System.String)">
            <summary>
            Logs the activity.
            </summary>
            <param name="activityType">The activity type.</param>
            <param name="message">The comment.</param>
            <param name="userName">Name of the user.</param>
            <param name="documentId"></param>
            <param name="documentType"></param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#Alert(TRR.O2I.Common.Exceptions.AlertType,System.String,TRR.O2I.Common.Core.Logging.DocumentInfo)">
            <summary>
            Alerts the specified exception.
            </summary>
            <param name="alertType">Type of the alert.</param>
            <param name="message">The message.</param>
            <param name="documentInfo"></param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#Alert(TRR.O2I.Common.Exceptions.AlertType,TRR.O2I.Common.Core.Logging.DocumentInfo,System.String)">
            <summary>
            Alerts the specified completion.
            </summary>
            <param name="alertType">The completion.</param>
            <param name="documentInfo">The info.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.LogManager.TRR#O2I#Common#Core#Logging#ITRLog#SendEmailToSupport(System.Exception)">
            <summary>
            Sends email to TR support team.
            </summary>
            <param name="e">Exception to be notified about</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ActivityLogDatabaseWriter">
            <summary>
            Writer that logs to a database.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ActivityLogDatabaseWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.ActivityLogDatabaseWriter"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ActivityLogDatabaseWriter.#ctor(TRR.O2I.Common.Core.Logging.Support.ILogGateway)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.ActivityLogDatabaseWriter"/> class.
            </summary>
            <param name="logGateway">The log gateway.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ActivityLogDatabaseWriter.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>
            Inserts the events into the database.
            </summary>
            <param name="events">The events to insert into the database.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ActivityLogEntity">
            <summary>
            This class is a DTO object for activity log
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.Connector">
            <summary>
            This is a DTO base class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ActivityLogEntity.#ctor(System.Int32,System.String,System.Int32,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ActivityLogEntity class and simultaneously creates new
            row in activity log table.
            </summary>
            <param name="activityType">activity type</param>
            <param name="documentId">document id</param>
            <param name="documentType">document type</param>
            <param name="createdDate">created date</param>
            <param name="sender">sender class name</param>
            <param name="message">developer's comment</param>
            <param name="userName">logged user name </param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ActivityLogFilter">
            <summary>
            This class is a filter for type of event that should be logged
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ActivityLogFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>
            Tests if the <see cref="T:log4net.Core.Level"/> of the logging event matches that of the filter
            </summary>
            <remarks>
            If the <see cref="T:log4net.Core.Level"/> of the event matches the level of the
            filter then the result of the function depends on the
            value of <c>AcceptOnMatch"</c>. If it is true then
            the function will return <see cref="F:log4net.Filter.FilterDecision.Accept"/>, it it is false then it
            will return <see cref="F:log4net.Filter.FilterDecision.Deny"/>. If the <see cref="T:log4net.Core.Level"/> does not match then
            the result will be the opposite of when it does match.
            </remarks>
            <param name="loggingEvent">the event to filter</param>
            <returns>see remarks</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ActivityLogInfo">
            <summary>
            Implementation of <see cref="T:TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo"/> interface.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo">
            <summary>
            Interface for activity log message
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo.Sender">
            <summary>
            Sender class name.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo.Message">
            <summary>
            Message to log
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo.UserName">
            <summary>
            User name to log.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo.ActivityType">
            <summary>
            Activity type
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo.DocumentId">
            <summary>
            Document id
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IActivityLogInfo.DocumentType">
            <summary>
            Document Type
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ActivityLogInfo.#ctor(TRR.O2I.Common.Core.Logging.ActivityType,System.String,System.String,System.String,System.String,TRR.O2I.Common.Core.Logging.LoggableDocumentType)">
            <summary>
            Constructor that create new ActivityLogInfo
            </summary>
            <param name="activity">Activity type</param>
            <param name="message">Message to log</param>
            <param name="sender">Sender class name</param>
            <param name="userName">User Name</param>
            <param name="docID">The doc ID.</param>
            <param name="documentType">Type of the document.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ActivityLogInfo.Sender">
            <summary>
            Sender class name
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ActivityLogInfo.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ActivityLogInfo.UserName">
            <summary>
            UserName to log.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ActivityLogInfo.ActivityType">
            <summary>
            Activity type
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ActivityLogInfo.DocumentId">
            <summary>
            Document id
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ActivityLogInfo.DocumentType">
            <summary>
            Document type to log.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.EnvironmentInfoProvider">
            <summary>
            IEnvironmentInfoProvider interface default implementation
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider">
            <summary>
            Base interface for EnvironmentInfoProvider
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider.UtcNow">
            <summary>
            Get Utc Now
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider.MachineName">
            <summary>
            Get MachineName
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider.CurrentDomainFriendlyName">
            <summary>
            Get Current Domain Friendly name
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider.CurrentUserName">
            <summary>
            Gets the name of the current user.
            </summary>
            <value>The name of the current user.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider.CurrentCompanyName">
            <summary>
            Gets the name of the current company.
            </summary>
            <value>The name of the current company.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider.AssemblyVersion">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider.GetUserId">
            <summary>
            Gets the user id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.EnvironmentInfoProvider.#ctor(TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.EnvironmentInfoProvider"/> class.
            </summary>
            <param name="facade">The facade.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ErrorsAlertsFilter">
            <summary>
            This class is a filter for type of event that should be logged.
            Should deny all events which can be accepted by AlertsWriter.
            All Errors and CoreErrors should be accepted.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ErrorsAlertsFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>
            Tests if the <see cref="T:log4net.Core.Level"/> of the logging event matches that of the filter
            </summary>
            <remarks>
            If the <see cref="T:log4net.Core.Level"/> of the event matches the level of the
            filter then the result of the function depends on the
            value of <c>AcceptOnMatch"</c>. If it is true then
            the function will return <see cref="F:log4net.Filter.FilterDecision.Accept"/>, it it is false then it
            will return <see cref="F:log4net.Filter.FilterDecision.Deny"/>. If the <see cref="T:log4net.Core.Level"/> does not match then
            the result will be the opposite of when it does match.
            </remarks>
            <param name="loggingEvent">the event to filter</param>
            <returns>see remarks</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ErrorsAlertsWriter">
            <summary>
            Sends e-mails with errors.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ErrorsAlertsWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.ErrorsAlertsWriter"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ErrorsAlertsWriter.#ctor(TRR.O2I.Common.Core.Logging.Support.IMailSender,TRR.O2I.Common.Core.Logging.Support.IExceptionRenderer)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.ErrorsAlertsWriter"/> class.
            </summary>
            <param name="mailSender">The mail sender.</param>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.ErrorsAlertsWriter.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>Send Buffer.</summary>
            <param name="events">The events to process.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.ILogInfo">
            <summary>
            Interface for error log message
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogInfo.Message">
            <summary>
            Message to log
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogInfo.Level">
            <summary>
            Log level
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogInfo.Sender">
            <summary>
            Gets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogInfo.DocumentInfo">
            <summary>
            Gets the document info.
            </summary>
            <value>The document info.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogInfo.ExceptionLogs">
            <summary>
            Gets the exception logs.
            </summary>
            <value>The exception logs.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.ILogInfo.EnvironmentInfoProvider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogDatabaseWriter">
            <summary>
            Summary description for LogDatabaseWriter.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogDatabaseWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.LogDatabaseWriter"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogDatabaseWriter.#ctor(TRR.O2I.Common.Core.Logging.Support.ILogGateway,TRR.O2I.Common.Core.Logging.Support.IExceptionRenderer,TRR.O2I.Common.Core.Logging.Support.IExceptionRenderer)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.Logging.Support.LogDatabaseWriter"/> class.
            </summary>
            <param name="logGateway">The log gateway.</param>
            <param name="textRenderer">The text renderer.</param>
            <param name="htmlRenderer">The HTML renderer.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogDatabaseWriter.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>
            Inserts the events into the database.
            </summary>
            <param name="events">The events to insert into the database.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogDataset">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogDataset.ActivityLogDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogDataset.MessageLogDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogDataset.ActivityLogRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogDataset.MessageLogRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogDataset.ActivityLogRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogDataset.MessageLogRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogEntity">
            <summary>
            This class is a DTO object for message log
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogEntity.#ctor(TRR.O2I.Common.Core.Logging.Support.ILogEntityRow)">
            <summary>
            Initializes a new instance of the LogEntity class and simultaneously creates new
            row in activity log table.
            </summary>
            <param name="logEntityRow">The log entity row.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogErrorFilter">
            <summary>
            This class is a filter for type of event that should be logged
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogErrorFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>
            Tests if the <see cref="T:log4net.Core.Level"/> of the logging event matches that of the filter
            </summary>
            <remarks>
            If the <see cref="T:log4net.Core.Level"/> of the event matches the level of the
            filter then the result of the function depends on the
            value of <c>AcceptOnMatch"</c>. If it is true then
            the function will return <see cref="F:log4net.Filter.FilterDecision.Accept"/>, it it is false then it
            will return <see cref="F:log4net.Filter.FilterDecision.Deny"/>. If the <see cref="T:log4net.Core.Level"/> does not match then
            the result will be the opposite of when it does match.
            </remarks>
            <param name="loggingEvent">the event to filter</param>
            <returns>see remarks</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogInfo">
            <summary>
            Implementation of <see cref="T:TRR.O2I.Common.Core.Logging.Support.ILogInfo"/> interface.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogInfo.#ctor(TRR.O2I.Common.Core.Logging.LogLevel,System.String,System.String,TRR.O2I.Common.Core.Logging.DocumentInfo,System.Collections.Generic.IList{TRR.O2I.Common.Core.Logging.Support.ExceptionLogEntry},TRR.O2I.Common.Core.Logging.Support.IEnvironmentInfoProvider)">
            <summary>
            Constructor that create new LogInfo.
            </summary>
            <param name="level">Log level.</param>
            <param name="message">Message to log.</param>
            <param name="sender">The sender.</param>
            <param name="documentInfo">The document info.</param>
            <param name="exceptionLogs">The exception logs.</param>
            <param name="environmentInfoProvider">The environment info provider.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogInfo.Level">
            <summary>
            Log level of message.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogInfo.Message">
            <summary>
            Message to log.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogInfo.Sender">
            <summary>
            Gets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogInfo.DocumentInfo">
            <summary>
            Gets the document info.
            </summary>
            <value>The document info.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogInfo.ExceptionLogs">
            <summary>
            Gets the exception logs.
            </summary>
            <value>The exception logs.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.Logging.Support.LogInfo.EnvironmentInfoProvider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogInfoFilter">
            <summary>
            This class is a filter for type of event that should be logged
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogInfoFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>
            Tests if the <see cref="T:log4net.Core.Level"/> of the logging event matches that of the filter
            </summary>
            <remarks>
            If the <see cref="T:log4net.Core.Level"/> of the event matches the level of the
            filter then the result of the function depends on the
            value of <c>AcceptOnMatch"</c>. If it is true then
            the function will return <see cref="F:log4net.Filter.FilterDecision.Accept"/>, it it is false then it
            will return <see cref="F:log4net.Filter.FilterDecision.Deny"/>. If the <see cref="T:log4net.Core.Level"/> does not match then
            the result will be the opposite of when it does match.
            </remarks>
            <param name="loggingEvent">the event to filter</param>
            <returns>see remarks</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.Logging.Support.LogWarningFilter">
            <summary>
            This class is a filter for type of event that should be logged
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.Logging.Support.LogWarningFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>
            Tests if the <see cref="T:log4net.Core.Level"/> of the logging event matches that of the filter
            </summary>
            <remarks>
            If the <see cref="T:log4net.Core.Level"/> of the event matches the level of the
            filter then the result of the function depends on the
            value of <c>AcceptOnMatch"</c>. If it is true then
            the function will return <see cref="F:log4net.Filter.FilterDecision.Accept"/>, it it is false then it
            will return <see cref="F:log4net.Filter.FilterDecision.Deny"/>. If the <see cref="T:log4net.Core.Level"/> does not match then
            the result will be the opposite of when it does match.
            </remarks>
            <param name="loggingEvent">the event to filter</param>
            <returns>see remarks</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.MessageType">
            <summary>
            Represents status message type.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.MessageType.Error">
            <summary>
            Common error.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.MessageType.Warning">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.MessageType.Result">
            <summary>
            Operation result.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.NumericFormatSetting">
            <summary>
            Denotes numeric values format settings.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.NumericFormatSetting.#ctor">
            <summary>
            Default constructor. Initializes class instance with default values.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.NumericFormatSetting.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Char)">
            <summary>
            Initializes class instance.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.NumericFormatSetting.MinQuantityDecimalDisplay">
            <summary>
            Gets MinQuantityDecimalDisplay value.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.NumericFormatSetting.MinPriceDecimalDisplay">
            <summary>
            Gets MinPriceDecimalDisplay value.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.NumericFormatSetting.MaxQuantityDecimalDisplay">
            <summary>
            Gets MaxQuantityDecimalDisplay value.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.NumericFormatSetting.MaxPriceDecimalDisplay">
            <summary>
            Gets MaxPriceDecimalDisplay value.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.NumericFormatSetting.RegExpForPrice">
            <summary>
            Gets RegExpForPrice string.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.NumericFormatSetting.RegExpForQuantity">
            <summary>
            Gets RegExpForQuatity string.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.NumericFormatSetting.RegExpForPercent">
            <summary>
            Gets the reg exp for percent.
            </summary>
            <value>The reg exp for percent.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.NumericFormatSetting.DecimalSeparator">
            <summary>
            Gets the decimal separator.
            </summary>
            <value>The decimal separator.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.QuantityHelper">
            <summary>
            Helper class for Quantityhandling with user settings.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.Format(System.Decimal)">
            <summary>
            Performs formatting against provided value with current company settings.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.TRR#O2I#Common#Core#IQuantityHelper#Format(System.Decimal)">
            <summary>
            Formats the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.Format(System.Decimal,System.Int32,System.Int32)">
            <summary>
            Formats the specified value using specific culture.
            </summary>
            <param name="value">The value.</param>
            <param name="maxQuantityDecimalsCount">The max quantity decimals count.</param>
            <param name="minQuantityDecimalsCount">The min quantity decimals count.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.Format(System.Decimal,System.Int32,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Performs formatting against provided value.
            </summary>
            <param name="value">Value to format.</param>
            <param name="maxQuantityDecimalDisplay">Max number of digits after comma.</param>
            <param name="minQuantityDecimalDisplay">Min number of digits after comma.</param>
            <param name="cultureInfo">The culture info.</param>
            <returns>Formatted value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.FormatInvoiceQuantity(System.Int32)">
            <summary>
            Formats the invoice quantity.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.ReFormat(System.String)">
            <summary>
            Reformats quantity with user settings.
            </summary>
            <param name="data">Data to format.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.Parse(System.String)">
            <summary>
            Performs parsing against provided value.
            </summary>
            <param name="value">Value to parse.</param>
            <returns>Parsed value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Performs parsing against provided value.
            </summary>
            <param name="value">Value to parse.</param>
            <param name="culture">The culture.</param>
            <returns>Parsed value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.TRR#O2I#Common#Core#IQuantityHelper#Parse(System.String)">
            <summary>
            Parses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.XmlFormat(System.Decimal)">
            <summary>
            Formats decimal for output to XML.
            </summary>
            <param name="value">The value.</param>
            <returns>Formatted data.</returns>
            <remarks>
            Removes number group separator and replaces decimal separator with point (".").
            </remarks>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.XmlFormat(System.String)">
            <summary>
            Format decimal xml-string value to decimal xml-string representation
            </summary>
            <param name="value">decimal xml-string value</param>
            <returns>
            formatted decimal xml-string value(with min/max decimal number settings applied)
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.QuantityHelper.XmlFormatVal(System.String)">
            <summary>
            Formats a decimal number according to the current culture
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.QuantityHelper.MinQuantityDecimalDisplay">
            <summary>
            Gets MinCurrencyDecimalDisplay.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.QuantityHelper.MaxQuantityDecimalDisplay">
            <summary>
            Gets MaxCurrencyDecimalDisplay.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.QuantityHelper.NumberOfQuantityDecimals">
            <summary>
            Gets the number of decimals in XML quantity.
            </summary>
            <value>The number of quantity decimals.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.QuantityHelper.NumberDecimalSeparator">
            <summary>
            Gets NumberDecimalSeparator.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.QuantityHelper.NumberGroupSeparator">
            <summary>
            Gets NumberGroupSeparator.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.QuantityHelper.RegExpForQuantity">
            <summary>
            Gets Quantity regular expression definition.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.ResourceHelper">
            <summary>
            Provides some handy resource management functionality.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.ResourceHelper.FormatString(System.String,System.Object[])">
            <summary>
            Formats resource string.
            </summary>
            <param name="resourceId">Resource id.</param>
            <param name="args">Arguments list.</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ResourceHelper.GetString(System.Reflection.Assembly,System.String)">
            <summary>
            Gets resource string given id and resource owner assembly.
            Only looks up Resource.resx files.
            </summary>
            <param name="resourceId">Resource id.</param>
            <param name="resourceAssembly">Resource owner assembly</param>
            <returns>Actual string value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ResourceHelper.GetResourcePath(System.Reflection.Assembly)">
            <summary>
            Gets resource path.
            </summary>
            <param name="resourceAssembly">Resourece assembly.</param>
            <returns>Resource path.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.ResourceHelper.EnsureNotNull(System.Object,System.String,System.Reflection.Assembly)">
            <summary>
            Checks if value to check is null, throws exception if it is.
            </summary>
            <param name="valueToCheck">Value to check.</param>
            <param name="resourceId">Resource id.</param>
            <param name="resourceAssembly">Resource owner assembly.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.SchemaConfiguration">
            <summary>
            Schema configuartion to validate documents.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.SchemaConfiguration.#ctor(System.Xml.Schema.XmlSchema,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.SchemaConfiguration"/> class.
            </summary>
            <param name="schema">The schema.</param>
            <param name="defaultNamespace">The default namespace.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.SchemaConfiguration.Schema">
            <summary>
            Gets the schema.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.SchemaConfiguration.DefaultNamespace">
            <summary>
            Gets the default namespace.
            </summary>
            <value>The default namespace.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.SchemaConfigurationEntity">
            <summary>
            Schema description class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.SchemaConfigurationEntity.#ctor(TRR.O2I.Common.Core.DocumentType,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.SchemaConfigurationEntity.Filename">
            <summary>
            Returns schemas filename.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.SchemaConfigurationEntity.Namespace">
            <summary>
            Returns schemas default namespace.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.SchemaConfigurationEntity.DocumentType">
            <summary>
            Returns DocumentType associated with schema.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.SchemasConfiguration">
            <summary>
            Summary description for SchemasConfiguration.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SchemasConfiguration.instance">
            <summary>
            Holds singleton instance.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SchemasConfiguration.schemas">
            <summary>
            Holds configuration settings for schema files.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SchemasConfiguration.schemasFolder">
            <summary>
            Holds the path to folder with schemas.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.SchemasConfiguration.#ctor">
            <summary>
            This class shoould not be instanciated manually.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.SchemasConfiguration.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Implemented by all configuration section handlers to parse the XML of the configuration section. The returned object is added to the configuration collection and is accessed by GetConfig.
            </summary>
            <param name="parent">The configuration settings in a corresponding parent configuration section. </param>
            <param name="configContext">An HttpConfigurationContext when Create is called from the ASP.NET configuration system. Otherwise, this parameter is reserved and is a null reference.</param>
            <param name="section">The XmlNode that contains the configuration information from the configuration file. Provides direct access to the XML contents of the configuration section. </param>
            <returns>A configuration object.</returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.SchemasConfiguration.Instance">
            <summary>
            Gets singleton instance.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.SchemasConfiguration.SchemasFolder">
            <summary>
            Returns path to the folder with schemas.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.SchemasConfiguration.Item(TRR.O2I.Common.Core.DocumentType)">
            <summary>
            Returns schema configuration for given documentType.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.SchemasConfiguration.ConfiguredDocumentTypes">
            <summary>
            Gets array of DocumentTypes for which schema was configured.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.SchemasConfiguration.SchemaAttributes">
            <summary>
            Attributes of the schema tag.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SchemasConfiguration.SchemaAttributes.documentType">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SchemasConfiguration.SchemaAttributes.schemaFilename">
            <summary>
            Schema file name.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SchemasConfiguration.SchemaAttributes.schemaNamespace">
            <summary>
            Schema's default namespace.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SchemasConfiguration.PathAttributes.value">
            <summary>
            Path to the folder with schemas.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.SchemasConfiguration.SchemasConfigNodes">
            <summary>
            Tags allowed in this section.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SchemasConfiguration.SchemasConfigNodes.path">
            <summary>
            Path to folder with schemas.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SchemasConfiguration.SchemasConfigNodes.schema">
            <summary>
            File name of the schema for documentType.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.SingletonProvider`1">
            <summary>
             Is used to provide an access to a single instance of T.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:TRR.O2I.Common.Core.SingletonProvider`1.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.SqlGeneratorAttribute">
            <summary>
            Sql script generator handler attribute.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.SqlGeneratorAttribute.scriptGeneratorHandler">
            <summary>
            Script generator for type
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.SqlGeneratorAttribute.#ctor(System.Type)">
            <summary>
            Constructs attribute.
            </summary>
            <param name="scriptGeneratorHandler">Full type name of script generator handler.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.SqlGeneratorAttribute.ScriptGeneratorHandler">
            <summary>
            Gets script generator type.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.StyleType">
            <summary>
            StyleType
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.StyleType.O2I">
            <summary>
             O2IStyle
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.StyleType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.TextFormatter">
            <summary>
            Contains method to prepare text string to be safe included into html page
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TextFormatter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TextFormatter"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TextFormatter.EscapeHtml(System.String)">
            <summary>
            Escapes the HTML.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TextFormatter.EscapeHtml(System.String,TRR.O2I.Common.Core.EscapeHtmlOptions)">
            <summary>
            Escapes the HTML.
            </summary>
            <param name="text">The text.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TextFormatter.EscapeHtml">
            <summary>
            Escapes the HTML.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TextFormatter.EscapeHtml(TRR.O2I.Common.Core.EscapeHtmlOptions)">
            <summary>
            Escapes the HTML.
            </summary>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TextFormatter.InjectLinks">
            <summary>
            Injects the links.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TextFormatter.InjectLinks(System.Char[])">
            <summary>
            Injects the links.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TextFormatter.InjectHtmlBreaks">
            <summary>
            Replaces the line breaks with HTML break.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TextFormatter.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.EscapeHtmlOptions">
            <summary>
            Escape html options
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.EscapeHtmlOptions.None">
            <summary>
            Escape all tags
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.EscapeHtmlOptions.OmitLineBreaks">
            <summary>
            Do not escape &lt;BR&gt; tag
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.EscapeHtmlOptions.OmitWordBreaks">
            <summary>
            Do not escape &lt;wbr&gt; tag
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.DateTimeUtil.TRIODateTimeHelper">
            <summary>
            TRIO date-time format (YYYYMMDDTHH:MM:SS[[+-]HH:MM]) specific conversion toutines.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.DateTimeUtil.TRIODateTimeHelper.TRIO_DATETIME_FORMAT_TIMEZONE">
            <summary>
            Head part of Hubwoo's TRIO date-time format YYYYMMDDTHH:MM:SS[[+-]HH:MM]
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.TRIODateTimeHelper.ConvertTRIOToUTC(System.String)">
            <summary>
            Converts Hubwoo's TRIO date-time formatted string into UTC DateTime value.
            </summary>
            <param name="trioDateTime">string formatted as YYYYMMDDTHH:MM:SS[[+-]HH:MM]</param>
            <returns>Date-time value in the universal time coordinates.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.TRIODateTimeHelper.XCBL40ConvertTRIOToUTC(System.String)">
            <summary>
            Converts Hubwoo's TRIO date-time formatted string in xCBL 4.0 format into UTC DateTime value.
            </summary>
            <param name="trioDateTime">string formatted as yyyy-MM-dd'T'HH:mm:ss</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.TRIODateTimeHelper.ConvertUTCToTRIO(System.DateTime,Cch.Commerster.Core.Localization.TimeZoneIdentifier)">
            <summary>
            Converts UTC date-time value into string in accordance with Hubwoo's TRIO date-time format.
            </summary>
            <param name="utc">Date-time value in the universal time coordinates.</param>
            <param name="timeZoneOffset">The time zone offset.</param>
            <returns>
            string formatted as YYYYMMDDTHH:MM:SS[[+-]HH:MM]
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.DateTimeUtil.TRIODateTimeHelper.XCBL40ConvertUTCToTRIO(System.DateTime,Cch.Commerster.Core.Localization.TimeZoneIdentifier)">
            <summary>
            AL:
            Converts UTC date-time value into string in accordance with xCBL 4.0 Hubwoo's TRIO date-time format.
            </summary>
            <param name="utc">Date-time value in the universal time coordinates.</param>
            <param name="trioTimeZoneOffset">Time zone offset value specified in milliseconds.</param>
            <returns>string formatted as [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm]</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRIPTaskStatus">
            <summary>
            Avialable DocumentIO entity status values.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.TRIPTaskStatus.Pending">
            <summary>
            Task enqueued for processing.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.TRIPTaskStatus.Processed">
            <summary>
            Task processed successfully.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.TRIPTaskStatus.Failed">
            <summary>
            Task processing filed.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.CompressionHelperFacade">
            <summary>
            The facade for Portal's compression helper
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.CompressionHelperFacade.Compress(System.String)">
            <summary>
            Compresses the data into an array of bytes 
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.CompressionHelperFacade.Uncompress(System.Byte[])">
            <summary>
            Uncompresses the specified zipped data.
            </summary>
            <param name="zippedData">The zipped data.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.TRxDocumentValidationException">
            <summary>
            Throws when TRx does not validate input document.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRxDocumentValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.Exceptions.WebServiceBusinessLogicFailureException">
            <summary>
             Throws when Web service interaction failed because of business rules.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Exceptions.WebServiceBusinessLogicFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.WebServiceInteractionFailureException">
            <summary>
            Throws when Web service interaction failed.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.WebServiceInteractionFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs exception class given exception detail message and inner exception for enveloping.
            </summary>
            <param name="details">Exception detail message.</param>
            <param name="innerException">Reference to inner exception to be enveloped.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.Factory">
            <summary>
            Creates entities of facade entities.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.Factory.CreateCompany(Cch.Commerster.Core.UserCompany.Company)">
            <summary>
            Creates company.
            </summary>
            <param name="commCompany">The comm company.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany">
            <summary>
            TRUE Company-type base interface
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.CompanyName">
            <summary>
            Company name.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.Address1">
            <summary>
            Address 1
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.Address2">
            <summary>
            Address 2
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.ZipCode">
            <summary>
            Zip code
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.CompanyId">
            <summary>
            Company Id
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.CompanyType">
            <summary>
            Company type.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.CompanyShortName">
            <summary>
            Company short name.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.ITRUECompany.Vat">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>The vat.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEAccountCode">
            <summary>
            Represents account code
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEAccountCode.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="buyerCompanyID"></param>
            <param name="accountCode"></param>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEAccountCode.BuyerCompanyID">
            <summary>
            Buyer company id.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEAccountCode.AccountCode">
            <summary>
            Account Code.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany">
            <summary>
            Represents facade for true company
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompanyType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany"/> class.
            </summary>
            <param name="companyName">Name of the company.</param>
            <param name="address1">The address1.</param>
            <param name="address2">The address2.</param>
            <param name="zipCode">The zip code.</param>
            <param name="city">The city.</param>
            <param name="country">The country.</param>
            <param name="companyId">The company id.</param>
            <param name="companyType">Type of the company.</param>
            <param name="companyShortName">Short name of the company.</param>
            <param name="vat">The vat.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.Vat">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>The vat.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.CompanyName">
            <summary>
            Company name.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.Address1">
            <summary>
            Address 1
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.Address2">
            <summary>
            Address 2
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.ZipCode">
            <summary>
            Zip code
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.CompanyId">
            <summary>
            Company Id
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.CompanyType">
            <summary>
            Company type.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompany.CompanyShortName">
            <summary>
            Company short name.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TrueCompanyComparerByName">
            <summary>
            Exposes a method that compares two objects.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TrueCompanyComparerByName.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zerox is less than y.Zerox equals y.Greater than zerox is greater than y.
            </returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompanyType">
            <summary>
            Company type.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompanyType.Buyer">
            <summary>Buyer company</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompanyType.Supplier">
            <summary>Supplier company</summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUECompanyType.Undefined">
            <summary>Undefined company</summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEContact">
            <summary>
            Facade for Commerster Contact
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEContact.#ctor(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEContact"/> class.
            </summary>
            <param name="contactId">The contact id.</param>
            <param name="contactName">Name of the contact.</param>
            <param name="email">The email.</param>
            <param name="phone">The phone.</param>
            <param name="fax">The fax.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEContact.ContactId">
            <summary>
            Gets or sets the contact id.
            </summary>
            <value>The contact id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEContact.ContactName">
            <summary>
            Gets or sets the name of the contact.
            </summary>
            <value>The name of the contact.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEContact.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEContact.Phone">
            <summary>
            Gets or sets the phone.
            </summary>
            <value>The phone.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEContact.Fax">
            <summary>
            Gets or sets the fax.
            </summary>
            <value>The fax.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser">
            <summary>
            Facade for TR user
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser.#ctor(System.Char,System.String,System.Int32,System.String,System.Int32,System.String,System.Globalization.CultureInfo,Cch.Commerster.Core.Localization.TimeZoneIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser"/> class.
            </summary>
            <param name="decimalSeparator">The decimal separator.</param>
            <param name="userName">Name of the user.</param>
            <param name="userId">The user id.</param>
            <param name="languageCode">The language code.</param>
            <param name="companyId">The company id.</param>
            <param name="displayName">The display name.</param>
            <param name="culture">The culture.</param>
            <param name="timeZoneIdentifier">The time zone identifier.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser.DecimalSeparator">
            <summary>
            Gets or sets the decimal separator.
            </summary>
            <value>The decimal separator.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser.LanguageCode">
            <summary>
            Gets or sets the language code.
            </summary>
            <value>The language code.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser.CompanyId">
            <summary>
            Gets or sets the company id.
            </summary>
            <value>The company id.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser.Culture">
            <summary>
            Gets the culture.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.FacadeEntities.TRUEUser.TimeZoneIdentifier">
            <summary>
            Gets the time zone identifier.
            </summary>
            <value>The time zone identifier.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade">
            <summary>
            Base interface for Currency Helper
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetUser(System.Int32)">
            <summary>
            Gets the user.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCompany(System.Int32)">
            <summary>
            Gets TRUE company by Id.
            </summary>
            <param name="companyId">Company Id.</param>
            <returns>Company object.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCompanyByIdentifierType(System.String)">
            <summary>
            Gets company by identifier.
            </summary>
            <param name="identifier">Identifier.</param>
            <returns>Company object.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCompanyLogicalDuns(System.Int32)">
            <summary>
            Gets the company logical duns.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCompanyPhysicalDuns(System.Int32)">
            <summary>
             Gets the company physical DUNS
            </summary>
            <param name="companyId">Company id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetDocumentsPerPageDisplay">
            <summary>
            Gets the documents per page display.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetAllAccountCodesForSupplier(System.Int32)">
            <summary>
            Gets all account codes for supplier
            </summary>
            <param name="supplierId"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.FindSupplierCompany(System.Int32)">
            <summary>
            Finds the supplier company.
            </summary>
            <param name="supplierId">The supplier id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.FindBuyerCompany(System.Int32)">
            <summary>
            Finds the buyer company.
            </summary>
            <param name="buyerId">The buyer id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetUsername">
            <summary>
            Gets the username.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCurrentCompanyName">
            <summary>
            Gets the company.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetUserId">
            <summary>
            Gets the username.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCurrentUser">
            <summary>
            Gets current user.
            </summary>
            <returns>User object.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCurrentUserContact">
            <summary>
            Gets the current user contact.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetBuyerCompanyType(System.Int32)">
            <summary>
            Gets the type of the buyer company.
            </summary>
            <param name="buyerId">The buyer id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetBuyerContactByEmail(System.Int32,System.String)">
            <summary>
            Gets the buyer contact by email.
            </summary>
            <param name="buyerId">The buyer id.</param>
            <param name="email">The email.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCurrentUserCompanies">
            <summary>
            Gets the current user companies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetUserByName(System.String)">
            <summary>
            Gets user by name.
            </summary>
            <param name="userName">User name.</param>
            <returns>User object.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.CheckCurrentUserCompanyForDocument(System.Int32)">
            <summary>
            Returns a value indicating whether user is assigned to the company
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.SwitchSelectedCompanyForCurrentUserIfDiffers(System.Int32)">
            <summary>
            Switches the current user selected company if needed.
            </summary>
            <param name="companyId"></param>
            <returns>A value indicating whether company has been switched.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetUserCompaniesByUserId(System.Int32)">
            <summary>
            Gets the user companies by user id.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.SetCurrentUserSelectedCompany(System.Int32)">
            <summary>
            Sets company for current user.
            </summary>
            <param name="companyId">Company id.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCurrentUserSelectedCompany">
            <summary>
            Loads company for current user.
            </summary>
            <returns>Loaded company.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetSupplierAccountCodesByBuyer(System.Int32)">
            <summary>
            
            </summary>
            <param name="buyerId"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetAccountCodesDeniedForUserXml(System.Int32,System.Int32)">
            <summary>
            Gets user-specific user account list in xml.
            </summary>
            <param name="companyId">The company id.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetAccountCodesDeniedForCurrentUserXml(System.Int32)">
            <summary>
            Gets user-specific user account list in xml.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCurrentBuyerList">
            <summary>
            Gets current buyer List.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetTranslation(System.Int32)">
            <summary>
            Gets the translation.
            </summary>
            <param name="labelId">The label id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetBuyerCompany(System.String)">
            <summary>
            Gets the buyer company.
            </summary>
            <param name="ident">The ident.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetSellerCompany(System.String)">
            <summary>
            Gets the seller company.
            </summary>
            <param name="ident">The ident.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetTimeZones">
            <summary>
            Gets the time zones.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetAllBuyers">
            <summary>
            Gets all buyers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetUsersForCompany(System.Int32)">
            <summary>
            Gets the users for company.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.HasRealOrDummyAccountCode(System.Int32,System.String,System.Int32)">
            <summary>
            Determines whether [has real or dummy account code] [the specified user id].
            </summary>
            <param name="userId">The user id.</param>
            <param name="accountCode">The account code.</param>
            <param name="companyId">The company id.</param>
            <returns>
            	<c>true</c> if [has real or dummy account code] [the specified user id]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetCompanyById(System.Int32)">
            <summary>
             Gets TRUECompany by id
            </summary>
            <param name="id">Company Id</param>
            <returns>TRUE Company</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetSellerCompaniesByName(System.String)">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetSellerCompaniesByShortName(System.String)">
            <summary>
            </summary>
            <param name="companyName"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade.GetSuppliersByVendorId(System.String,System.Int32)">
            <summary>
            Gets Supplier companies be Vendor Id and Buyer ID
            </summary>
            <param name="vendorId"></param>
            <param name="buyerId"></param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.ITRUESecurityManager">
            <summary>
            Provides access to TRUE security engine
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUESecurityManager.GetRoleName(TRR.O2I.Common.Core.Role)">
            <summary>
            Gets the name of the role.
            </summary>
            <param name="role">The role.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUESecurityManager.GetAvialableO2iApplicationRoles">
            <summary>
            Gets the avialable o2i application roles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUESecurityManager.GetUserRoles(System.Int32)">
            <summary>
            Gets the user company roles.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.ITRUETRxManager">
            <summary>
            Provides access to TRUE TRx Manager
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUETRxManager.UpdateDocStatusDuplicatePO(System.Boolean,System.String,System.String)">
            <summary>
            Updates the doc status duplicate PO.
            </summary>
            <param name="isDuplicate">if set to <c>true</c> [is duplicate].</param>
            <param name="messageId">The message id.</param>
            <param name="bizDocID">BizDocID</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUETRxManager.UpdateDocStatusTRIOValidation(System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Changes Document Status after TRIO validation.
            </summary>
            <param name="isSuccess">If action was successful.</param>
            <param name="messageId">GUID of the document.</param>
            <param name="briefMessage">Short error/OK message.</param>
            <param name="fullMessage">Long description about the error, if any (like stack trace.</param>
            <param name="bizDocID">BizDocID</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUETRxManager.UpdateDocStatusFinal(System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Sets Document Status after all checks.
            </summary>
            <param name="isSuccess">Whether check passed successfuly.</param>
            <param name="messageId">GUID of the document.</param>
            <param name="briefMessage">Short error/OK message.</param>
            <param name="fullMessage">Long description about the error, if any (like stack trace.</param>
            <param name="optionalParameters">Optional parameters to be passed to the web-service</param>
            <param name="bizDocID">BizDocID</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUETRxManager.UpdateDocStatusFinalForDuplicatePO(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Sets Document Status after all checks.
            </summary>
            <param name="messageId">GUID of the document.</param>
            <param name="briefMessage">Short error/OK message.</param>
            <param name="fullMessage">Long description about the error, if any (like stack trace.</param>
            <param name="optionalParameters">Optional parameters to be passed to the web-service</param>
            <param name="bizDocID">BizDocID</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.ITRUETRxManager.UpdateDocStatusGRWithoutPO(System.Boolean,System.String,System.String)">
            <summary>
            Updates the doc status GR without PO.
            </summary>
            <param name="isSucceeded">if set to <c>true</c> [is succeeded].</param>
            <param name="messageId">The message id.</param>
            <param name="bizDocID">BizDocID</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.Role">
            <summary>
            O2I Roles list.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Role.O2I_Admin">
            <summary>
            O2I Admin.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Role.O2I_User_INV">
            <summary>
            O2I INV User.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Role.eInvoiceAdmin">
            <summary>
            eInvoice admin. Have the same permissions as O2I_Admin.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Role.O2I_User">
            <summary>
            User PO/POR, CO/COR, ASN, GR, CA Privileges
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Role.CM_Admin">
            <summary>
            Commerster Admin. Is allowed to see ErrorLog, ActivityLog, Admin Console.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.Role.NotO2IRole">
            <summary>
            Represents enum value for all non-O2I roles
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.Proxy.ApplicationIdCachingProxy">
            <summary>
            Used for caching Application Id in the global cache.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.ApplicationIdCachingProxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TRUEIntegration.Proxy.ApplicationIdCachingProxy"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.ApplicationIdCachingProxy.GetApplicationId">
            <summary>
            Gets AppliactionId
            </summary>
            <returns>TrCompany object.</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRCompanyCachingProxy">
            <summary>
            Used for caching TrCompany object in the context.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRCompanyCachingProxy.GetTrCompany(System.Int32)">
            <summary>
            Gets TrCompany by Id.
            </summary>
            <param name="id">Id of the company.</param>
            <returns>TrCompany object.</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEAccountCodesCachingProxy">
            <summary>
            Contains logic to cache account codes.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEAccountCodesCachingProxy.GetAccountCodesDeniedForCurrentUserXml(System.Int32)">
            <summary>
            Gets the xml view of account codes denied for current user.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEAccountCodesCachingProxy.GetAccountCodesDeniedForUserXml(System.Int32,System.Int32)">
            <summary>
            Gets the xml view of account codes denied for current user.
            </summary>
            <param name="companyId">The company id.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEAccountCodesCachingProxy.GetAccountCodesDeniedForCurrentUser(System.Int32)">
            <summary>
            Gets the account codes denied for current user.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEAccountCodesCachingProxy.ConvertAccountCodeListIntoXml(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Converts account code list into xml representation.
            </summary>
            <param name="accountCodes">Account code list.</param>
            <returns>Xml representation.</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEUserCachingProxy">
            <summary>
            Contains functionality to cache TRUE user.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEUserCachingProxy.GetTRUEUser(Cch.Commerster.Core.UserCompany.User)">
            <summary>
            Returns TRUE User.
            </summary>
            <param name="commUser">The comm user.</param>
            <returns>TRUE User.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEUserCachingProxy.CreateUser(Cch.Commerster.Core.UserCompany.User)">
            <summary>
            Creates TRUE user instance.
            </summary>
            <param name="commUser">The comm user.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEUserCachingProxy.GetTRUEUser(System.Int32)">
            <summary>
            Gets the TRUE user.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.Proxy.TRUEUserCachingProxy.GetCurrentUser">
            <summary>
            Gets the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.RoleName">
            <summary>
            RoleName class. Wrapper for string to make roles names case-insensitive(as it in commerster)
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.RoleName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TRUEIntegration.RoleName"/> class.
            </summary>
            <param name="roleName">Name of the role.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.RoleName.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.RoleName.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.RoleName.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.TRUEAccountCodesManager">
            <summary>
            Class with function to work with PDS AccountCodes 
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEAccountCodesManager.GetAllAccountCodesForSupplier(System.Int32)">
            <summary>
            Gets all account codes for supplier
            </summary>
            <param name="supplierId">supplier Id.</param>
            <returns>List of account codes.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEAccountCodesManager.GetSupplierAccountCodes(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets supplier account codes.
            </summary>
            <param name="userId">User Id.</param>
            <param name="supplierId">Company Id.</param>
            <param name="isAdmin">if set to <c>true</c> [is admin].</param>
            <returns>List of account codes.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEAccountCodesManager.GetAccountCodesDeniedForUser(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets user-specific user account list
            </summary>
            <param name="userId">The user id.</param>
            <param name="companyId">The company id.</param>
            <param name="isUserAdmin">if set to <c>true</c> [is user admin].</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.TRUECompanyManager">
            <summary>
            TRUECompanyManager.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUECompanyManager.GetCurrentUserSelectedCompanyId">
            <summary>
            Loads selected in profile company Id for current user.
            </summary>
            <returns>Selected in profile company Id for current user</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUECompanyManager.SetCurrentUserSelectedCompany(System.Int32)">
            <summary>
            Sets selected in profile company for current user.
            </summary>
            <param name="TRCompanyId">Selected in profile company id.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUECompanyManager.GetCompanyLogicalDuns(System.Int32)">
            <summary>
            Simple wrapper method to return Logical DUNS for company
            </summary>
            <param name="companyID">company</param>
            <returns>list of DUNS</returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacade">
            <summary>
            Facade for TRUE Integration functions.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacade.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl">
            <summary>
            Default TRUE Integration Facade implemenatation
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetBuyerContactByEmail(System.Int32,System.String)">
            <summary>
            </summary>
            <param name="buyerId"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCurrentUserContact">
            <summary>
            Gets the contact of current user
            </summary>
            <returns>contact of current user</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetUser(System.Int32)">
            <summary>
            Gets the user.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetUserByName(System.String)">
            <summary>
            Gets user by name.
            </summary>
            <param name="userName">User name.</param>
            <returns>User object.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetBuyerCompanyType(System.Int32)">
            <summary>
            Gets the type of the buyer company.
            </summary>
            <param name="buyerId">The buyer id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCompany(System.Int32)">
            <summary>
            Gets TRUE company by Id.
            </summary>
            <param name="companyId">Company Id.</param>
            <returns>Company object.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCompanyByIdentifierType(System.String)">
            <summary>
            Gets company by identifier.
            </summary>
            <param name="identifier">Identifier.</param>
            <returns>Company object.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCurrentUserCompanies">
            <summary>
            Gets the current user companies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.CheckCurrentUserCompanyForDocument(System.Int32)">
            <summary>
            Returns a value indicating whether user is assigned to the company
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.SwitchSelectedCompanyForCurrentUserIfDiffers(System.Int32)">
            <summary>
            Switches the current user selected company if needed.
            </summary>
            <param name="companyId"></param>
            <returns>A value indicating whether company has been switched.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetUserCompaniesByUserId(System.Int32)">
            <summary>
            Gets the user companies by user id.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.SetCurrentUserSelectedCompany(System.Int32)">
            <summary>
            Sets company for current user.
            </summary>
            <param name="companyId">Company id.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCurrentUserSelectedCompany">
            <summary>
            Loads company for current user.
            </summary>
            <returns>Loaded company.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCompanyLogicalDuns(System.Int32)">
            <summary>
            Gets the company logical duns.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCompanyPhysicalDuns(System.Int32)">
            <summary>
             Gets company physical duns.
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetAllAccountCodesForSupplier(System.Int32)">
            <summary>
            Gets all account codes for supplier
            </summary>
            <param name="supplierId"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetSupplierAccountCodesByBuyer(System.Int32)">
            <summary>
            </summary>
            <param name="buyerId"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetAccountCodesDeniedForUserXml(System.Int32,System.Int32)">
            <summary>
            Gets user-specific user account list in xml.
            </summary>
            <param name="companyId">The company id.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetAccountCodesDeniedForCurrentUserXml(System.Int32)">
            <summary>
            Gets user-specific user account list in xml.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCurrentBuyerList">
            <summary>
            Gets current buyer List.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetDocumentsPerPageDisplay">
            <summary>
            Gets the documents per page display.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetTranslation(System.Int32)">
            <summary>
            Gets the translation.
            </summary>
            <param name="labelId">The label id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.FindSupplierCompany(System.Int32)">
            <summary>
            Finds the supplier company.
            </summary>
            <param name="supplierId">The supplier id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.FindBuyerCompany(System.Int32)">
            <summary>
            Finds the buyer company.
            </summary>
            <param name="buyerId">The buyer id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetUsername">
            <summary>
            Gets the username.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetUserId">
            <summary>
            Gets the username.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCurrentUser">
            <summary>
            Gets the current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCurrentCompanyName">
            <summary>
            Gets the company.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetBuyerCompany(System.String)">
            <summary>
            Gets the buyer company.
            </summary>
            <param name="ident">The ident.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetSellerCompany(System.String)">
            <summary>
            Gets the seller company.
            </summary>
            <param name="ident">The ident.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetTimeZones">
            <summary>
            Gets the time zones.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetAllBuyers">
            <summary>
            Gets all buyers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetUsersForCompany(System.Int32)">
            <summary>
            Gets the users for company.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.HasRealOrDummyAccountCode(System.Int32,System.String,System.Int32)">
            <summary>
            Determines whether [has real or dummy account code] [the specified user id].
            </summary>
            <param name="userId">The user id.</param>
            <param name="accountCode">The account code.</param>
            <param name="companyId">The company id.</param>
            <returns>
            	<c>true</c> if [has real or dummy account code] [the specified user id]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetCompanyById(System.Int32)">
            <summary>
             Gets TRUECompany by id
            </summary>
            <param name="id">Company Id</param>
            <returns>TRUE Company</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetSellerCompaniesByName(System.String)">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetSellerCompaniesByShortName(System.String)">
            <summary>
            </summary>
            <param name="companyName"></param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUEIntegrationFacadeImpl.GetSuppliersByVendorId(System.String,System.Int32)">
            <summary>
            Gets Supplier company be Vendor Id and Buyer ID
            </summary>
            <param name="vendorId"></param>
            <param name="buyerId"></param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.TRUESecurityManager">
            <summary>
            TRUESecurityManager.
            </summary>
        </member>
        <member name="F:TRR.O2I.Common.Core.TRUEIntegration.TRUESecurityManager.AppSystemName">
            <summary>
            AppSystemName.
            </summary>
            <remarks>For internal use only. TRUE version dependend.</remarks>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUESecurityManager.#ctor">
            <summary>
            Prevent instance creation.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUESecurityManager.GetAvialableApplicationRoles(System.Int32)">
            <summary>
            Returns list of avialable O2I application user's roles.
            </summary>
            <returns>List of avialable O2I application user's roles.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUESecurityManager.GetAvialableO2iApplicationRoles">
            <summary>
            Gets the avialable o2i application roles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUESecurityManager.GetRoleName(TRR.O2I.Common.Core.Role)">
            <summary>
            Returns registered role name.
            </summary>
            <param name="role">Role type.</param>
            <returns>Registered role name.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUESecurityManager.GetUserRoles(System.Int32)">
            <summary>
            Gets the user company roles.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.TRUESecurityManager.Instance">
            <summary>
            Provides access to the only instance of TRUE Security Manager
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.TRUESecurityManager.ApplicationID">
            <summary>
            Gets O2I application Identificator in TRUE registarar.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.TRUETRxManager">
            <summary>
            TRx manager fascade class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUETRxManager.SendDocument(System.String,System.String,System.String)">
            <summary>
            Sends TRIO-compliant document through TRx.
            </summary>
            <param name="uniqueIdentifier">Unique Identifier for the document which will be used as message ID in TRx</param>
            <param name="xmlContent">Xml document content.</param>
            <param name="xmlAttachment">XMl attachment content.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUETRxManager.TRR#O2I#Common#Core#TRUEIntegration#ITRUETRxManager#UpdateDocStatusFinalForDuplicatePO(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Sets Document Status after all checks.
            </summary>
            <param name="messageId">GUID of the document.</param>
            <param name="briefMessage">Short error/OK message.</param>
            <param name="fullMessage">Long description about the error, if any (like stack trace.</param>
            <param name="optionalParameters">Optional parameters to be passed to the web-service</param>
            <param name="bizDocID">BizDocID</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.TRUETRxManager.UpdateDocumentStatus(System.Boolean,System.String,TRR.O2I.Common.Core.TRUEIntegration.TRUETRxManager.EventParams,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Main method for communicating with JBoss Client for document status updating.
            </summary>
            <param name="isSuccess">If action was successful.</param>
            <param name="messageId">GUID of the document.</param>
            <param name="eventParams">Standard params for event.</param>
            <param name="briefMessage">Short error/OK message.</param>
            <param name="fullMessage">Long description about the error, if any (like stack trace.</param>
            <param name="optionalParameters">Optional parameters from the parsed document</param>
            <param name="bizDocID">BizDocID</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.TRUETRxManager.EventParams">
            <summary>
            Factory of the standard params of document events.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettingsMapper">
            <summary>
            User role settings mapper
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettingsMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettingsMapper"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettingsMapper.#ctor(TRR.O2I.Common.Core.TRUEIntegration.ITRUESecurityManager,TRR.O2I.Common.Core.TRUEIntegration.ITRUEIntegrationFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettingsMapper"/> class.
            </summary>
            <param name="securityManager">The security manager.</param>
            <param name="integrationFacade">The integration facade.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettingsMapper.Load(System.Int32)">
            <summary>
            Gets the user roles info.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettingsMapper.LoadCurrentUserSettings">
            <summary>
            Gets the current user roles info.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings">
             <summary>
            Contains user roles information
             </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.Collections.Generic.IList{System.String}}},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings"/> class.
            </summary>
            <param name="userRoles">The company to roles.</param>
            <param name="o2iRoles">Name of the o2i roles.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings.CanViewCompanyPreferences(System.Int32)">
            <summary>
            Determines whether this instance [can view company preferences] the specified company id.
            </summary>
            <param name="companyId">The company id.</param>
            <returns>
            	<c>true</c> if this instance [can view company preferences] the specified company id; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings.IsInRole(System.String)">
            <summary>
            Determines whether [user is in role] [the specified role name].
            </summary>
            <param name="roleName">Name of the role.</param>
            <returns>
            	<c>true</c> if [user is in role] [the specified role name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings.IsInRole(System.String,System.Int32)">
            <summary>
            Determines whether [user is in role for company specified] [the specified role name].
            </summary>
            <param name="roleName">Name of the role.</param>
            <param name="companyId">The company id.</param>
            <returns>
            	<c>true</c> if [user is in role for company specified] [the specified role name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings.IsAdmin(System.Int32)">
            <summary>
            Determines whether the user has O2I_Admin or eInvoice.Admin role for specified company
            </summary>
            <param name="companyId">The company id.</param>
            <returns>
            	<c>true</c> if the user has O2I_Admin or eInvoice.Admin role for specified company; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings.IsUserINV(System.Int32)">
            <summary>
            Gets a value indicating whether a user has O2I_User_INV role.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings.ReverseO2iRoles(System.Int32)">
            <summary>
            Reverses the o2i roles for company.
            </summary>
            <param name="companyId">The company id.</param>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings.IsCommersterAdmin">
            <summary>
            Gets a value indicating whether this instance is commerster admin.
            </summary>
            <value>
            	<c>true</c> if this instance is commerster admin; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:TRR.O2I.Common.Core.TRUEIntegration.UserRoleSettings.CanEditCompanySettings">
            <summary>
            Gets a value indicating whether current user can allow to modify configurable parameters.
            </summary>
            <value>
            	<c>true</c> if this instance can allow to modify configurable parameters; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:TRR.O2I.Common.Core.UIStatusMessage">
            <summary>
            Represents common ui message
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.UIStatusMessage.#ctor(TRR.O2I.Common.Core.MessageType,System.String)">
            <summary>
            Constructs a new instance of the UIStatusMessage class.
            </summary>
            <param name="messageType">Type of the message.</param>
            <param name="message">The English default status message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.UIStatusMessage.#ctor(TRR.O2I.Common.Core.MessageType,System.Int32,System.String)">
            <summary>
            Constructs a new instance of the UIStatusMessage class.
            </summary>
            <param name="messageType">Type of the message.</param>
            <param name="localizationID">PDS LabelID for the status message.</param>
            <param name="message">The English default status message.</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.UIStatusMessage.#ctor(TRR.O2I.Common.Core.MessageType,System.Int32,System.String,System.Object[])">
            <summary>
            Constructs a new instance of the UIStatusMessage class.
            </summary>
            <param name="messageType">Type of the message.</param>
            <param name="localizationId">PDS LabelID for the status message.</param>
            <param name="message">The English default status message.</param>
            <param name="messageParameters">Parameters for the status message. These will be processed by string.Format.</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.UIStatusMessage.LocalizationID">
            <summary>
            Gets the status' localization ID.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UIStatusMessage.Message">
            <summary>
            Gets the status message.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UIStatusMessage.Type">
            <summary>
            Gets/sets message type.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UIStatusMessage.TargetSummaryBlockID">
            <summary>
            Gets or sets TargetSummaryBlockID
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.UIStatusMessageContainer">
            <summary>
            Represents a container for UIStatus message.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UIStatusMessageContainer.Messages">
            <summary>
            Gets messages list.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UIStatusMessageContainer.Item(TRR.O2I.Common.Core.MessageType)">
            <summary>
            Gets messages list of oncrete type.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UIStatusMessageContainer.Container">
            <summary>
            Gets global container.
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.URLTemplatesSection">
            <summary>
             Represent a wrapper for URLTempaltes section in config file.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.URLTemplatesSection.ASNSearchPageUrlTemplate">
            <summary>
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.URLTemplatesSection.CODetailsPageUrlTemplate">
            <summary>
             Gets a CO details page url template
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.URLTemplatesSection.CADetailsPageUrlTemplate">
            <summary>
             Gets a CA details page url template
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.URLTemplatesSection.GRDetailsPageUrlTemplate">
            <summary>
             Gets a GR details page url template
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.URLTemplatesSection.PODetailsPageUrlTemplate">
            <summary>
             Gets a PO details page url template
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.URLTemplatesSection.RADetailsPageUrlTemplate">
            <summary>
             Gets a RA details page url template
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.URLTemplatesSection.ESDetailsPageUrlTemplate">
            <summary>
             Gets a ES details page url template
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.URLTemplatesSection.INVDetailsPageUrlTemplate">
            <summary>
             Gets a INV details page url template
            </summary>
        </member>
        <member name="T:TRR.O2I.Common.Core.UserInformationBlock">
            <summary>
            Represent information regarding currently logged in user.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.UserInformationBlock.#ctor(System.Int32,System.Int32,System.String,Cch.Commerster.Core.Localization.TimeZoneIdentifier,System.String,TRR.O2I.Common.Core.NumericFormatSetting,TRR.O2I.Common.Core.BusinessProcessType,System.String,System.Boolean)">
            <summary>
            Initializes instance of the SupplierInformationBlock class.
            </summary>
            <param name="userId">User id</param>
            <param name="companyId">Supplier company id</param>
            <param name="displayName">User display name</param>
            <param name="timeZoneOffset">Time zone offset associated with the current user.</param>
            <param name="languageCode">Time zone offset associated with the current user.</param>
            <param name="numericFormat">The numeric format.</param>
            <param name="processType">Refers to <see cref="P:TRR.O2I.Common.Core.UserInformationBlock.BusinessProcessType"/></param>
            <param name="vat">vat id</param>
            <param name="isAdmin">if set to <c>true</c> [is admin].</param>
        </member>
        <member name="P:TRR.O2I.Common.Core.UserInformationBlock.BusinessProcessType">
            <summary>
            Gets or sets the type of the business process for current user is logged in.
            </summary>
            <value>The type of the business process.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.UserInformationBlock.UserId">
            <summary>
            Gets the user id.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UserInformationBlock.Vat">
            <summary>
            Gets the vat id.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UserInformationBlock.CompanyId">
            <summary>
            Gets the supplier company id current user belings to.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UserInformationBlock.DisplayName">
            <summary>
            Gets the user display name.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UserInformationBlock.TimezoneOffset">
            <summary>
            Gets the user's timezone offset in milliseconds.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UserInformationBlock.LanguageCode">
            <summary>
            Gets the user's local language code.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UserInformationBlock.NumericFormat">
            <summary>
            Gets/sets various numeric format-related settings
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.UserInformationBlock.IsAdmin">
            <summary>
            Gets a value indicating whether this instance is admin.
            </summary>
            <value><c>true</c> if this instance is admin; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.XMLDocumentParser">
            <summary>
            Contains logic to extract general header information from document XML in safe manner.
            Also provides access to original document XML
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.XMLDocumentParser.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.XMLDocumentParser"/> class.
            </summary>
            <param name="xml">XML document for parsing</param>
            <param name="documentType">DocumentType enum member</param>
        </member>
        <member name="M:TRR.O2I.Common.Core.XMLDocumentParser.GetCompanyID(System.String)">
            <summary>
            Gets companyID by ident. Returns 0 if couldn't find id
            </summary>
            <param name="ident"></param>
            <returns></returns>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.DocumentID">
            <summary>
            Returns actual document ID.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.RelatedDocumentNumber">
            <summary>
            Gets the number of the related document 
            (OrderNumber for CO, ASN, GR, INV,CA and InvoiceNumber for InvoiceResponse).
            </summary>
            <value>The related document ID.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.BuyerID">
            <summary>
            Returns BuyerID.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.SupplierID">
            <summary>
            Returns BuyerID.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.AccountCode">
            <summary>
            Returns AccountCode.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.PlantId">
            <summary>
            Gets the plant id.
            </summary>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.DocumentType">
            <summary>
            Gets the type of the document.
            </summary>
            <value>The type of the document.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.Xml">
            <summary>
            Gets the XML.
            </summary>
            <value>The XML.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.XmlNamespace.Prefix">
            <summary>
            Gets or sets the prefix.
            </summary>
            <value>The prefix.</value>
        </member>
        <member name="P:TRR.O2I.Common.Core.XMLDocumentParser.XmlNamespace.Namespace">
            <summary>
            Gets or sets the namespace.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="T:TRR.O2I.Common.Core.XmlHelper">
            <summary>
            Helper class for handling xml data.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.XmlHelper.XmlEncode(System.String)">
            <summary>
            Encodes string to xml-compliant representation.
            </summary>
            <param name="data">Data to encode.</param>
            <returns>Encoded value.</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.XmlHelper.CreateNamespaceManager(System.Xml.XmlDocument,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Creates XmlNamespaceManager
            </summary>
            <param name="document">The XmlDocument</param>
            <param name="defaultNameSpacePrefix">DefaultNameSpacePrefix</param>
            <param name="namespaces">Additional namespaces</param>
            <returns>XmlNamespaceManager</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.XmlHelper.GetXsdSchema(TRR.O2I.Common.Core.DocumentType)">
            <summary>
            Loads schema for given document type.
            </summary>
            <param name="documentType">Document type of necessary schema.</param>
            <returns></returns>
        </member>
        <member name="T:TRR.O2I.Common.Core.XmlNotValidException">
            <summary>
            Throws when xml is not valid by schema
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.XmlNotValidException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.XmlNotValidException"/> class.
            </summary>
            <param name="header">The header.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:TRR.O2I.Common.Core.XMLValidator">
            <summary>
            Summary description for XMLValidator. 
            Uses Cch.Util.XmlValidation.XmlValidator for validating documents.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.XMLValidator.#ctor(TRR.O2I.Common.Core.Logging.ITRLog)">
            <summary>
            Initializes a new instance of the <see cref="T:TRR.O2I.Common.Core.XMLValidator"/> class.
            </summary>
        </member>
        <member name="M:TRR.O2I.Common.Core.XMLValidator.Validate(TRR.O2I.Common.Core.DocumentType,System.String)">
            <summary>
            Validates an xml document
            </summary>
            <param name="documentType"></param>
            <param name="inputDoc"></param>
            <returns></returns>
            <remarks>Added by Molnar Szilveszter</remarks>
        </member>
        <member name="M:TRR.O2I.Common.Core.XMLValidator.Validate(TRR.O2I.Common.Core.DocumentType,System.Xml.XmlDocument)">
            <summary>
            Function validate xml document by type
            </summary>
            <param name="documentType">document type</param>
            <param name="doc">xml document</param>
            <returns>result of valdation: true when valid</returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.XMLValidator.Validate(TRR.O2I.Common.Core.SchemaConfiguration,System.Xml.XmlDocument)">
            <summary>
            Validates the specified xml with schema configuration.
            </summary>
            <param name="schemaConfiguration">The schema configuration.</param>
            <param name="doc">The doc.</param>
            <returns></returns>
        </member>
        <member name="M:TRR.O2I.Common.Core.XMLValidator.LogErrors(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.String}},System.String)">
            <summary>
            Logs the errors.
            </summary>
            <param name="messageList">The message list.</param>
            <param name="inputDoc">The input doc.</param>
        </member>
    </members>
</doc>
